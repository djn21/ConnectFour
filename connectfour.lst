;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19-Jun-17 19:08:38
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02017F  	LJMP 383
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x0201C9  	LJMP 457
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
_set_pixel:
;graphics.c,9 :: 		void set_pixel(unsigned short row, unsigned short column, Color color){
;graphics.c,10 :: 		switch(color){
0x002E	0x2104    	AJMP L_set_pixel0
;graphics.c,11 :: 		case BLACK:
L_set_pixel2:
;graphics.c,12 :: 		mat_red[row] = mat_red[row] & ~(1 << column); // clear RED
0x0030	0x7431    	MOV A, lo_addr(_mat_red)
0x0032	0x250D    	ADD A, FARG_set_pixel_row
0x0034	0xF8      	MOV R0, A
0x0035	0xAA0E    	MOV R2, FARG_set_pixel_column
0x0037	0x7401    	MOV A, #1
0x0039	0x0A      	INC R2
0x003A	0x8002    	SJMP L__set_pixel12
L__set_pixel13:
0x003C	0xC3      	CLR C
0x003D	0x33      	RLC A
L__set_pixel12:
0x003E	0xDAFC    	DJNZ R2, L__set_pixel13
0x0040	0xF9      	MOV R1, A
0x0041	0x6301FF  	XRL R1, #255
0x0044	0xAA01    	MOV R2, R1
0x0046	0xE6      	MOV A, @R0
0x0047	0x5A      	ANL A, R2
0x0048	0xF9      	MOV R1, A
0x0049	0xA601    	MOV @R0, R1
;graphics.c,13 :: 		mat_green[row] = mat_green[row] & ~(1 << column); // clear GREEN
0x004B	0x7439    	MOV A, lo_addr(_mat_green)
0x004D	0x250D    	ADD A, FARG_set_pixel_row
0x004F	0xF8      	MOV R0, A
0x0050	0xAA0E    	MOV R2, FARG_set_pixel_column
0x0052	0x7401    	MOV A, #1
0x0054	0x0A      	INC R2
0x0055	0x8002    	SJMP L__set_pixel14
L__set_pixel15:
0x0057	0xC3      	CLR C
0x0058	0x33      	RLC A
L__set_pixel14:
0x0059	0xDAFC    	DJNZ R2, L__set_pixel15
0x005B	0xF9      	MOV R1, A
0x005C	0x6301FF  	XRL R1, #255
0x005F	0xAA01    	MOV R2, R1
0x0061	0xE6      	MOV A, @R0
0x0062	0x5A      	ANL A, R2
0x0063	0xF9      	MOV R1, A
0x0064	0xA601    	MOV @R0, R1
;graphics.c,14 :: 		break;
0x0066	0x2120    	AJMP L_set_pixel1
;graphics.c,15 :: 		case RED:
L_set_pixel3:
;graphics.c,16 :: 		mat_red[row] = mat_red[row] | (1 << column); // set RED
0x0068	0x7431    	MOV A, lo_addr(_mat_red)
0x006A	0x250D    	ADD A, FARG_set_pixel_row
0x006C	0xF8      	MOV R0, A
0x006D	0xAA0E    	MOV R2, FARG_set_pixel_column
0x006F	0x7401    	MOV A, #1
0x0071	0x0A      	INC R2
0x0072	0x8002    	SJMP L__set_pixel16
L__set_pixel17:
0x0074	0xC3      	CLR C
0x0075	0x33      	RLC A
L__set_pixel16:
0x0076	0xDAFC    	DJNZ R2, L__set_pixel17
0x0078	0xF9      	MOV R1, A
0x0079	0xAA01    	MOV R2, R1
0x007B	0xE6      	MOV A, @R0
0x007C	0x4A      	ORL A, R2
0x007D	0xF9      	MOV R1, A
0x007E	0xA601    	MOV @R0, R1
;graphics.c,17 :: 		mat_green[row] = mat_green[row] & ~(1 << column); // clear GREEN
0x0080	0x7439    	MOV A, lo_addr(_mat_green)
0x0082	0x250D    	ADD A, FARG_set_pixel_row
0x0084	0xF8      	MOV R0, A
0x0085	0xAA0E    	MOV R2, FARG_set_pixel_column
0x0087	0x7401    	MOV A, #1
0x0089	0x0A      	INC R2
0x008A	0x8002    	SJMP L__set_pixel18
L__set_pixel19:
0x008C	0xC3      	CLR C
0x008D	0x33      	RLC A
L__set_pixel18:
0x008E	0xDAFC    	DJNZ R2, L__set_pixel19
0x0090	0xF9      	MOV R1, A
0x0091	0x6301FF  	XRL R1, #255
0x0094	0xAA01    	MOV R2, R1
0x0096	0xE6      	MOV A, @R0
0x0097	0x5A      	ANL A, R2
0x0098	0xF9      	MOV R1, A
0x0099	0xA601    	MOV @R0, R1
;graphics.c,18 :: 		break;
0x009B	0x2120    	AJMP L_set_pixel1
;graphics.c,19 :: 		case GREEN:
L_set_pixel4:
;graphics.c,20 :: 		mat_red[row] = mat_red[row] & ~(1 << column); // clear RED
0x009D	0x7431    	MOV A, lo_addr(_mat_red)
0x009F	0x250D    	ADD A, FARG_set_pixel_row
0x00A1	0xF8      	MOV R0, A
0x00A2	0xAA0E    	MOV R2, FARG_set_pixel_column
0x00A4	0x7401    	MOV A, #1
0x00A6	0x0A      	INC R2
0x00A7	0x8002    	SJMP L__set_pixel20
L__set_pixel21:
0x00A9	0xC3      	CLR C
0x00AA	0x33      	RLC A
L__set_pixel20:
0x00AB	0xDAFC    	DJNZ R2, L__set_pixel21
0x00AD	0xF9      	MOV R1, A
0x00AE	0x6301FF  	XRL R1, #255
0x00B1	0xAA01    	MOV R2, R1
0x00B3	0xE6      	MOV A, @R0
0x00B4	0x5A      	ANL A, R2
0x00B5	0xF9      	MOV R1, A
0x00B6	0xA601    	MOV @R0, R1
;graphics.c,21 :: 		mat_green[row] = mat_green[row] | (1 << column); // set GREEN
0x00B8	0x7439    	MOV A, lo_addr(_mat_green)
0x00BA	0x250D    	ADD A, FARG_set_pixel_row
0x00BC	0xF8      	MOV R0, A
0x00BD	0xAA0E    	MOV R2, FARG_set_pixel_column
0x00BF	0x7401    	MOV A, #1
0x00C1	0x0A      	INC R2
0x00C2	0x8002    	SJMP L__set_pixel22
L__set_pixel23:
0x00C4	0xC3      	CLR C
0x00C5	0x33      	RLC A
L__set_pixel22:
0x00C6	0xDAFC    	DJNZ R2, L__set_pixel23
0x00C8	0xF9      	MOV R1, A
0x00C9	0xAA01    	MOV R2, R1
0x00CB	0xE6      	MOV A, @R0
0x00CC	0x4A      	ORL A, R2
0x00CD	0xF9      	MOV R1, A
0x00CE	0xA601    	MOV @R0, R1
;graphics.c,22 :: 		break;
0x00D0	0x804E    	SJMP L_set_pixel1
;graphics.c,23 :: 		case YELLOW:
L_set_pixel5:
;graphics.c,24 :: 		mat_red[row] = mat_red[row] | (1 << column); // set RED
0x00D2	0x7431    	MOV A, lo_addr(_mat_red)
0x00D4	0x250D    	ADD A, FARG_set_pixel_row
0x00D6	0xF8      	MOV R0, A
0x00D7	0xAA0E    	MOV R2, FARG_set_pixel_column
0x00D9	0x7401    	MOV A, #1
0x00DB	0x0A      	INC R2
0x00DC	0x8002    	SJMP L__set_pixel24
L__set_pixel25:
0x00DE	0xC3      	CLR C
0x00DF	0x33      	RLC A
L__set_pixel24:
0x00E0	0xDAFC    	DJNZ R2, L__set_pixel25
0x00E2	0xF9      	MOV R1, A
0x00E3	0xAA01    	MOV R2, R1
0x00E5	0xE6      	MOV A, @R0
0x00E6	0x4A      	ORL A, R2
0x00E7	0xF9      	MOV R1, A
0x00E8	0xA601    	MOV @R0, R1
;graphics.c,25 :: 		mat_green[row] = mat_green[row] | (1 << column); // set GREEN
0x00EA	0x7439    	MOV A, lo_addr(_mat_green)
0x00EC	0x250D    	ADD A, FARG_set_pixel_row
0x00EE	0xF8      	MOV R0, A
0x00EF	0xAA0E    	MOV R2, FARG_set_pixel_column
0x00F1	0x7401    	MOV A, #1
0x00F3	0x0A      	INC R2
0x00F4	0x8002    	SJMP L__set_pixel26
L__set_pixel27:
0x00F6	0xC3      	CLR C
0x00F7	0x33      	RLC A
L__set_pixel26:
0x00F8	0xDAFC    	DJNZ R2, L__set_pixel27
0x00FA	0xF9      	MOV R1, A
0x00FB	0xAA01    	MOV R2, R1
0x00FD	0xE6      	MOV A, @R0
0x00FE	0x4A      	ORL A, R2
0x00FF	0xF9      	MOV R1, A
0x0100	0xA601    	MOV @R0, R1
;graphics.c,26 :: 		break;
0x0102	0x801C    	SJMP L_set_pixel1
;graphics.c,27 :: 		}
L_set_pixel0:
0x0104	0xE50F    	MOV A, FARG_set_pixel_color
0x0106	0x7002    	JNZ #2
0x0108	0x0130    	AJMP L_set_pixel2
0x010A	0xE50F    	MOV A, FARG_set_pixel_color
0x010C	0x6401    	XRL A, #1
0x010E	0x7002    	JNZ #2
0x0110	0x0168    	AJMP L_set_pixel3
0x0112	0xE50F    	MOV A, FARG_set_pixel_color
0x0114	0x6402    	XRL A, #2
0x0116	0x7002    	JNZ #2
0x0118	0x019D    	AJMP L_set_pixel4
0x011A	0xE50F    	MOV A, FARG_set_pixel_color
0x011C	0x6403    	XRL A, #3
0x011E	0x60B2    	JZ L_set_pixel5
L_set_pixel1:
;graphics.c,28 :: 		}
0x0120	0x22      	RET
; end of _set_pixel
_vline:
;graphics.c,45 :: 		Color color){
;graphics.c,47 :: 		for(row = row_start; row <= row_end; row++){
0x0121	0x85080C  	MOV vline_row_L0, FARG_vline_row_start+0
L_vline9:
0x0124	0xD3      	SETB C
0x0125	0xE50C    	MOV A, vline_row_L0
0x0127	0x9509    	SUBB A, FARG_vline_row_end
0x0129	0x500F    	JNC L_vline10
;graphics.c,48 :: 		set_pixel(row, column, color);
0x012B	0x850C0D  	MOV FARG_set_pixel_row, vline_row_L0+0
0x012E	0x850A0E  	MOV FARG_set_pixel_column, FARG_vline_column+0
0x0131	0x850B0F  	MOV FARG_set_pixel_color, FARG_vline_color+0
0x0134	0x112E    	ACALL _set_pixel
;graphics.c,47 :: 		for(row = row_start; row <= row_end; row++){
0x0136	0x050C    	INC vline_row_L0
;graphics.c,49 :: 		}
0x0138	0x80EA    	SJMP L_vline9
L_vline10:
;graphics.c,50 :: 		}
0x013A	0x22      	RET
; end of _vline
_set_out:
;display.c,24 :: 		void set_out(unsigned char row, unsigned char red, unsigned char green){
;display.c,26 :: 		P2 = 0x00;
0x013B	0x75A000  	MOV P2, #0
;display.c,27 :: 		P3 = 0x00;
0x013E	0x75B000  	MOV P3, #0
;display.c,29 :: 		P1 = ~row;
0x0141	0xE510    	MOV A, FARG_set_out_row
0x0143	0x64FF    	XRL A, #255
0x0145	0xF590    	MOV P1, A
;display.c,31 :: 		P2 = red;
0x0147	0x8511A0  	MOV P2, FARG_set_out_red+0
;display.c,32 :: 		P3 = green;
0x014A	0x8512B0  	MOV P3, FARG_set_out_green+0
;display.c,33 :: 		}
0x014D	0x22      	RET
; end of _set_out
_hline:
;graphics.c,34 :: 		Color color){
;graphics.c,36 :: 		for(column = column_start; column <= column_end; column++){
0x014E	0x85090C  	MOV hline_column_L0, FARG_hline_column_start+0
L_hline6:
0x0151	0xD3      	SETB C
0x0152	0xE50C    	MOV A, hline_column_L0
0x0154	0x950A    	SUBB A, FARG_hline_column_end
0x0156	0x500F    	JNC L_hline7
;graphics.c,37 :: 		set_pixel(row, column, color);
0x0158	0x85080D  	MOV FARG_set_pixel_row, FARG_hline_row+0
0x015B	0x850C0E  	MOV FARG_set_pixel_column, hline_column_L0+0
0x015E	0x850B0F  	MOV FARG_set_pixel_color, FARG_hline_color+0
0x0161	0x112E    	ACALL _set_pixel
;graphics.c,36 :: 		for(column = column_start; column <= column_end; column++){
0x0163	0x050C    	INC hline_column_L0
;graphics.c,38 :: 		}
0x0165	0x80EA    	SJMP L_hline6
L_hline7:
;graphics.c,39 :: 		}
0x0167	0x22      	RET
; end of _hline
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x0168	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x0169	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x016A	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x016B	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x016C	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x016D	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x016F	0x22      	RET
; end of ___CC2D
_init_display:
;display.c,10 :: 		void init_display(){
;display.c,12 :: 		TMOD = 0x01;
0x0170	0x758901  	MOV TMOD, #1
;display.c,14 :: 		TH0 = 0xF9;
0x0173	0x758CF9  	MOV TH0, #249
;display.c,15 :: 		TL0 = 0x7D;
0x0176	0x758A7D  	MOV TL0, #125
;display.c,17 :: 		IE = 0x82;
0x0179	0x75A882  	MOV IE, #130
;display.c,19 :: 		TR0_bit = 1;
0x017C	0xD28C    	SETB TR0_bit
;display.c,20 :: 		}
0x017E	0x22      	RET
; end of _init_display
_main:
0x017F	0x758180  	MOV SP, #128
0x0182	0x12023D  	LCALL 573
;connectfour.c,7 :: 		void main() {
;connectfour.c,8 :: 		init_display();
0x0185	0x3170    	ACALL _init_display
;connectfour.c,9 :: 		hline(0, 0, 7, GREEN);
0x0187	0x750800  	MOV FARG_hline_row, #0
0x018A	0x750900  	MOV FARG_hline_column_start, #0
0x018D	0x750A07  	MOV FARG_hline_column_end, #7
0x0190	0x750B02  	MOV FARG_hline_color, #2
0x0193	0x314E    	ACALL _hline
;connectfour.c,10 :: 		vline(1, 7, 6, GREEN);
0x0195	0x750801  	MOV FARG_vline_row_start, #1
0x0198	0x750907  	MOV FARG_vline_row_end, #7
0x019B	0x750A06  	MOV FARG_vline_column, #6
0x019E	0x750B02  	MOV FARG_vline_color, #2
0x01A1	0x3121    	ACALL _vline
;connectfour.c,11 :: 		vline(0, 7, 7, RED);
0x01A3	0x750800  	MOV FARG_vline_row_start, #0
0x01A6	0x750907  	MOV FARG_vline_row_end, #7
0x01A9	0x750A07  	MOV FARG_vline_column, #7
0x01AC	0x750B01  	MOV FARG_vline_color, #1
0x01AF	0x3121    	ACALL _vline
;connectfour.c,13 :: 		set_pixel(3, 5, RED);
0x01B1	0x750D03  	MOV FARG_set_pixel_row, #3
0x01B4	0x750E05  	MOV FARG_set_pixel_column, #5
0x01B7	0x750F01  	MOV FARG_set_pixel_color, #1
0x01BA	0x112E    	ACALL _set_pixel
;connectfour.c,14 :: 		set_pixel(4, 5, GREEN);
0x01BC	0x750D04  	MOV FARG_set_pixel_row, #4
0x01BF	0x750E05  	MOV FARG_set_pixel_column, #5
0x01C2	0x750F02  	MOV FARG_set_pixel_color, #2
0x01C5	0x112E    	ACALL _set_pixel
;connectfour.c,15 :: 		}
0x01C7	0x80FE    	SJMP #254
; end of _main
_refresh_display:
0x01C9	0xC000    	PUSH R0
0x01CB	0xC001    	PUSH R1
0x01CD	0xC002    	PUSH R2
0x01CF	0xC0D0    	PUSH PSW
0x01D1	0xC0E0    	PUSH ACC
0x01D3	0xC0F0    	PUSH B
0x01D5	0xC082    	PUSH DP0L
0x01D7	0xC083    	PUSH DP0H
;display.c,39 :: 		void refresh_display() iv IVT_ADDR_ET0 {
;display.c,42 :: 		TR0_bit = 0;
0x01D9	0xC28C    	CLR TR0_bit
;display.c,44 :: 		TH0 = 0xF9;
0x01DB	0x758CF9  	MOV TH0, #249
;display.c,45 :: 		TL0 = 0x7D;
0x01DE	0x758A7D  	MOV TL0, #125
;display.c,47 :: 		set_out(mat_row[i], mat_red[i], mat_green[i]);
0x01E1	0xE530    	MOV A, refresh_display_i_L0
0x01E3	0x2434    	ADD A, lo_addr(_mat_row)
0x01E5	0xF9      	MOV R1, A
0x01E6	0xE4      	CLR A
0x01E7	0x3402    	ADDC A, hi_addr(_mat_row)
0x01E9	0xFA      	MOV R2, A
0x01EA	0x850182  	MOV DP0L, 1
0x01ED	0x850283  	MOV DP0H, 2
0x01F0	0xE4      	CLR A
0x01F1	0x93      	MOVC A, @A+DPTR
0x01F2	0xF8      	MOV R0, A
0x01F3	0x850010  	MOV FARG_set_out_row, 0
0x01F6	0x7431    	MOV A, lo_addr(_mat_red)
0x01F8	0x2530    	ADD A, refresh_display_i_L0
0x01FA	0xF8      	MOV R0, A
0x01FB	0x8611    	MOV FARG_set_out_red, @R0
0x01FD	0x7439    	MOV A, lo_addr(_mat_green)
0x01FF	0x2530    	ADD A, refresh_display_i_L0
0x0201	0xF8      	MOV R0, A
0x0202	0x8612    	MOV FARG_set_out_green, @R0
0x0204	0x313B    	ACALL _set_out
;display.c,48 :: 		i++;
0x0206	0x0530    	INC refresh_display_i_L0
;display.c,50 :: 		if(i == 8)
0x0208	0xE530    	MOV A, refresh_display_i_L0
0x020A	0x6408    	XRL A, #8
0x020C	0x7003    	JNZ L_refresh_display0
;display.c,51 :: 		i = 0;
0x020E	0x753000  	MOV refresh_display_i_L0, #0
L_refresh_display0:
;display.c,53 :: 		TR0_bit = 1;
0x0211	0xD28C    	SETB TR0_bit
;display.c,54 :: 		}
0x0213	0xD083    	POP DP0H
0x0215	0xD082    	POP DP0L
0x0217	0xD0F0    	POP B
0x0219	0xD0E0    	POP ACC
0x021B	0xD0D0    	POP PSW
0x021D	0xD002    	POP R2
0x021F	0xD001    	POP R1
0x0221	0xD000    	POP R0
0x0223	0x32      	RETI
; end of _refresh_display
0x023D	0x7830    	MOV R0, 48
0x023F	0x7901    	MOV R1, 1
0x0241	0x75823C  	MOV DP0L, 60
0x0244	0x758302  	MOV DP0H, 2
0x0247	0x120168  	LCALL 360
0x024A	0x7831    	MOV R0, 49
0x024C	0x7910    	MOV R1, 16
0x024E	0x758224  	MOV DP0L, 36
0x0251	0x758302  	MOV DP0H, 2
0x0254	0x120168  	LCALL 360
0x0257	0x22      	RET
;display.c,0 :: ?ICS_mat_red
0x0224	0x000000 ;?ICS_mat_red+0
0x0227	0x000000 ;?ICS_mat_red+3
0x022A	0x0000 ;?ICS_mat_red+6
; end of ?ICS_mat_red
;display.c,0 :: ?ICS_mat_green
0x022C	0x000000 ;?ICS_mat_green+0
0x022F	0x000000 ;?ICS_mat_green+3
0x0232	0x0000 ;?ICS_mat_green+6
; end of ?ICS_mat_green
;display.c,3 :: _mat_row
0x0234	0x010204 ;_mat_row+0
0x0237	0x081020 ;_mat_row+3
0x023A	0x4080 ;_mat_row+6
; end of _mat_row
;display.c,0 :: ?ICSrefresh_display_i_L0
0x023C	0x00 ;?ICSrefresh_display_i_L0+0
; end of ?ICSrefresh_display_i_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E     [243]    _set_pixel
0x0121      [26]    _vline
0x013B      [19]    _set_out
0x014E      [26]    _hline
0x0168       [8]    ___CC2D
0x0170      [15]    _init_display
0x017F      [74]    _main
0x01C9      [91]    _refresh_display
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    FARG_vline_row_start
0x0008       [1]    FARG_hline_row
0x0009       [1]    FARG_vline_row_end
0x0009       [1]    FARG_hline_column_start
0x000A       [1]    FARG_vline_column
0x000A       [1]    FARG_hline_column_end
0x000B       [1]    FARG_hline_color
0x000B       [1]    FARG_vline_color
0x000C       [1]    vline_row_L0
0x000C       [1]    hline_column_L0
0x000D       [1]    FARG_set_pixel_row
0x000E       [1]    FARG_set_pixel_column
0x000F       [1]    FARG_set_pixel_color
0x0010       [1]    FARG_set_out_row
0x0011       [1]    FARG_set_out_red
0x0012       [1]    FARG_set_out_green
0x0030       [1]    refresh_display_i_L0
0x0031       [8]    _mat_red
0x0039       [8]    _mat_green
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [0]    TR0_bit
0x0089       [1]    TMOD
0x008A       [1]    TL0
0x008C       [1]    TH0
0x0090       [1]    P1
0x00A0       [1]    P2
0x00A8       [1]    IE
0x00B0       [1]    P3
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0224       [8]    ?ICS_mat_red
0x022C       [8]    ?ICS_mat_green
0x0234       [8]    _mat_row
0x023C       [1]    ?ICSrefresh_display_i_L0
//** Label List: ** 
//----------------------------------------------
  _main
  L_refresh_display0
  _init_display
  _set_out
  _refresh_display
  L_set_pixel0
  L_set_pixel1
  L_set_pixel2
  L_set_pixel3
  L_set_pixel4
  L_set_pixel5
  L_hline6
  L_hline7
  L_hline8
  L_vline9
  L_vline10
  L_vline11
  _set_pixel
  L__set_pixel12
  L__set_pixel13
  L__set_pixel14
  L__set_pixel15
  L__set_pixel16
  L__set_pixel17
  L__set_pixel18
  L__set_pixel19
  L__set_pixel20
  L__set_pixel21
  L__set_pixel22
  L__set_pixel23
  L__set_pixel24
  L__set_pixel25
  L__set_pixel26
  L__set_pixel27
  _hline
  _vline
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  L_refresh_display0
  _init_display
  _set_out
  _refresh_display
