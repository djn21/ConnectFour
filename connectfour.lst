;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15-Aug-17 16:48:58
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02060F  	LJMP 1551
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x0205B4  	LJMP 1460
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020651  	LJMP 1617
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
_Graphics_SetPixel:
;graphics.c,19 :: 		void Graphics_SetPixel(unsigned char row, unsigned char column, Color color){
;graphics.c,20 :: 		switch(color){
0x002E	0x2104    	AJMP L_Graphics_SetPixel0
;graphics.c,21 :: 		case COLOR_BLACK:
L_Graphics_SetPixel2:
;graphics.c,22 :: 		gMatrixRed[column] = gMatrixRed[column] & ~(1 << row); // clear RED
0x0030	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x0032	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x0034	0xF8      	MOV R0, A
0x0035	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x0037	0x7401    	MOV A, #1
0x0039	0x0A      	INC R2
0x003A	0x8002    	SJMP L__Graphics_SetPixel15
L__Graphics_SetPixel16:
0x003C	0xC3      	CLR C
0x003D	0x33      	RLC A
L__Graphics_SetPixel15:
0x003E	0xDAFC    	DJNZ R2, L__Graphics_SetPixel16
0x0040	0xF9      	MOV R1, A
0x0041	0x6301FF  	XRL R1, #255
0x0044	0xAA01    	MOV R2, R1
0x0046	0xE6      	MOV A, @R0
0x0047	0x5A      	ANL A, R2
0x0048	0xF9      	MOV R1, A
0x0049	0xA601    	MOV @R0, R1
;graphics.c,23 :: 		gMatrixGreen[column] = gMatrixGreen[column] & ~(1 << row); // clear GREEN
0x004B	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x004D	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x004F	0xF8      	MOV R0, A
0x0050	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x0052	0x7401    	MOV A, #1
0x0054	0x0A      	INC R2
0x0055	0x8002    	SJMP L__Graphics_SetPixel17
L__Graphics_SetPixel18:
0x0057	0xC3      	CLR C
0x0058	0x33      	RLC A
L__Graphics_SetPixel17:
0x0059	0xDAFC    	DJNZ R2, L__Graphics_SetPixel18
0x005B	0xF9      	MOV R1, A
0x005C	0x6301FF  	XRL R1, #255
0x005F	0xAA01    	MOV R2, R1
0x0061	0xE6      	MOV A, @R0
0x0062	0x5A      	ANL A, R2
0x0063	0xF9      	MOV R1, A
0x0064	0xA601    	MOV @R0, R1
;graphics.c,24 :: 		break;
0x0066	0x2120    	AJMP L_Graphics_SetPixel1
;graphics.c,25 :: 		case COLOR_RED:
L_Graphics_SetPixel3:
;graphics.c,26 :: 		gMatrixRed[column] = gMatrixRed[column] | (1 << row); // set RED
0x0068	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x006A	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x006C	0xF8      	MOV R0, A
0x006D	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x006F	0x7401    	MOV A, #1
0x0071	0x0A      	INC R2
0x0072	0x8002    	SJMP L__Graphics_SetPixel19
L__Graphics_SetPixel20:
0x0074	0xC3      	CLR C
0x0075	0x33      	RLC A
L__Graphics_SetPixel19:
0x0076	0xDAFC    	DJNZ R2, L__Graphics_SetPixel20
0x0078	0xF9      	MOV R1, A
0x0079	0xAA01    	MOV R2, R1
0x007B	0xE6      	MOV A, @R0
0x007C	0x4A      	ORL A, R2
0x007D	0xF9      	MOV R1, A
0x007E	0xA601    	MOV @R0, R1
;graphics.c,27 :: 		gMatrixGreen[column] = gMatrixGreen[column] & ~(1 << row); // clear GREEN
0x0080	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x0082	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x0084	0xF8      	MOV R0, A
0x0085	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x0087	0x7401    	MOV A, #1
0x0089	0x0A      	INC R2
0x008A	0x8002    	SJMP L__Graphics_SetPixel21
L__Graphics_SetPixel22:
0x008C	0xC3      	CLR C
0x008D	0x33      	RLC A
L__Graphics_SetPixel21:
0x008E	0xDAFC    	DJNZ R2, L__Graphics_SetPixel22
0x0090	0xF9      	MOV R1, A
0x0091	0x6301FF  	XRL R1, #255
0x0094	0xAA01    	MOV R2, R1
0x0096	0xE6      	MOV A, @R0
0x0097	0x5A      	ANL A, R2
0x0098	0xF9      	MOV R1, A
0x0099	0xA601    	MOV @R0, R1
;graphics.c,28 :: 		break;
0x009B	0x2120    	AJMP L_Graphics_SetPixel1
;graphics.c,29 :: 		case COLOR_GREEN:
L_Graphics_SetPixel4:
;graphics.c,30 :: 		gMatrixRed[column] = gMatrixRed[column] & ~(1 << row); // clear RED
0x009D	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x009F	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x00A1	0xF8      	MOV R0, A
0x00A2	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x00A4	0x7401    	MOV A, #1
0x00A6	0x0A      	INC R2
0x00A7	0x8002    	SJMP L__Graphics_SetPixel23
L__Graphics_SetPixel24:
0x00A9	0xC3      	CLR C
0x00AA	0x33      	RLC A
L__Graphics_SetPixel23:
0x00AB	0xDAFC    	DJNZ R2, L__Graphics_SetPixel24
0x00AD	0xF9      	MOV R1, A
0x00AE	0x6301FF  	XRL R1, #255
0x00B1	0xAA01    	MOV R2, R1
0x00B3	0xE6      	MOV A, @R0
0x00B4	0x5A      	ANL A, R2
0x00B5	0xF9      	MOV R1, A
0x00B6	0xA601    	MOV @R0, R1
;graphics.c,31 :: 		gMatrixGreen[column] = gMatrixGreen[column] | (1 << row); // set GREEN
0x00B8	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x00BA	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x00BC	0xF8      	MOV R0, A
0x00BD	0xAA1D    	MOV R2, FARG_Graphics_SetPixel_row
0x00BF	0x7401    	MOV A, #1
0x00C1	0x0A      	INC R2
0x00C2	0x8002    	SJMP L__Graphics_SetPixel25
L__Graphics_SetPixel26:
0x00C4	0xC3      	CLR C
0x00C5	0x33      	RLC A
L__Graphics_SetPixel25:
0x00C6	0xDAFC    	DJNZ R2, L__Graphics_SetPixel26
0x00C8	0xF9      	MOV R1, A
0x00C9	0xAA01    	MOV R2, R1
0x00CB	0xE6      	MOV A, @R0
0x00CC	0x4A      	ORL A, R2
0x00CD	0xF9      	MOV R1, A
0x00CE	0xA601    	MOV @R0, R1
;graphics.c,32 :: 		break;
0x00D0	0x804E    	SJMP L_Graphics_SetPixel1
;graphics.c,33 :: 		case COLOR_YELLOW:
L_Graphics_SetPixel5:
;graphics.c,34 :: 		gMatrixRed[column] = gMatrixRed[column] | (1 << column); // set RED
0x00D2	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x00D4	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x00D6	0xF8      	MOV R0, A
0x00D7	0xAA1E    	MOV R2, FARG_Graphics_SetPixel_column
0x00D9	0x7401    	MOV A, #1
0x00DB	0x0A      	INC R2
0x00DC	0x8002    	SJMP L__Graphics_SetPixel27
L__Graphics_SetPixel28:
0x00DE	0xC3      	CLR C
0x00DF	0x33      	RLC A
L__Graphics_SetPixel27:
0x00E0	0xDAFC    	DJNZ R2, L__Graphics_SetPixel28
0x00E2	0xF9      	MOV R1, A
0x00E3	0xAA01    	MOV R2, R1
0x00E5	0xE6      	MOV A, @R0
0x00E6	0x4A      	ORL A, R2
0x00E7	0xF9      	MOV R1, A
0x00E8	0xA601    	MOV @R0, R1
;graphics.c,35 :: 		gMatrixGreen[column] = gMatrixGreen[column] | (1 << column); // set GREEN
0x00EA	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x00EC	0x251E    	ADD A, FARG_Graphics_SetPixel_column
0x00EE	0xF8      	MOV R0, A
0x00EF	0xAA1E    	MOV R2, FARG_Graphics_SetPixel_column
0x00F1	0x7401    	MOV A, #1
0x00F3	0x0A      	INC R2
0x00F4	0x8002    	SJMP L__Graphics_SetPixel29
L__Graphics_SetPixel30:
0x00F6	0xC3      	CLR C
0x00F7	0x33      	RLC A
L__Graphics_SetPixel29:
0x00F8	0xDAFC    	DJNZ R2, L__Graphics_SetPixel30
0x00FA	0xF9      	MOV R1, A
0x00FB	0xAA01    	MOV R2, R1
0x00FD	0xE6      	MOV A, @R0
0x00FE	0x4A      	ORL A, R2
0x00FF	0xF9      	MOV R1, A
0x0100	0xA601    	MOV @R0, R1
;graphics.c,36 :: 		break;
0x0102	0x801C    	SJMP L_Graphics_SetPixel1
;graphics.c,37 :: 		}
L_Graphics_SetPixel0:
0x0104	0xE51F    	MOV A, FARG_Graphics_SetPixel_color
0x0106	0x7002    	JNZ #2
0x0108	0x0130    	AJMP L_Graphics_SetPixel2
0x010A	0xE51F    	MOV A, FARG_Graphics_SetPixel_color
0x010C	0x6401    	XRL A, #1
0x010E	0x7002    	JNZ #2
0x0110	0x0168    	AJMP L_Graphics_SetPixel3
0x0112	0xE51F    	MOV A, FARG_Graphics_SetPixel_color
0x0114	0x6402    	XRL A, #2
0x0116	0x7002    	JNZ #2
0x0118	0x019D    	AJMP L_Graphics_SetPixel4
0x011A	0xE51F    	MOV A, FARG_Graphics_SetPixel_color
0x011C	0x6403    	XRL A, #3
0x011E	0x60B2    	JZ L_Graphics_SetPixel5
L_Graphics_SetPixel1:
;graphics.c,38 :: 		}
0x0120	0x22      	RET
; end of _Graphics_SetPixel
_Delay_1us:
;__Lib_Delays.c,63 :: 		void Delay_1us() {
;__Lib_Delays.c,64 :: 		Delay_us(1);
0x0121	0x00      	NOP
;__Lib_Delays.c,65 :: 		}
0x0122	0x22      	RET
; end of _Delay_1us
_Graphics_HorizontalLine:
;graphics.c,61 :: 		unsigned char columnEnd, Color color){
;graphics.c,63 :: 		for(column = columnStart; column <= columnEnd; column++){
0x0123	0x85191C  	MOV Graphics_HorizontalLine_column_L0, FARG_Graphics_HorizontalLine_columnStart+0
L_Graphics_HorizontalLine9:
0x0126	0xD3      	SETB C
0x0127	0xE51C    	MOV A, Graphics_HorizontalLine_column_L0
0x0129	0x951A    	SUBB A, FARG_Graphics_HorizontalLine_columnEnd
0x012B	0x500F    	JNC L_Graphics_HorizontalLine10
;graphics.c,64 :: 		Graphics_SetPixel(row, column, color);
0x012D	0x85181D  	MOV FARG_Graphics_SetPixel_row, FARG_Graphics_HorizontalLine_row+0
0x0130	0x851C1E  	MOV FARG_Graphics_SetPixel_column, Graphics_HorizontalLine_column_L0+0
0x0133	0x851B1F  	MOV FARG_Graphics_SetPixel_color, FARG_Graphics_HorizontalLine_color+0
0x0136	0x112E    	ACALL _Graphics_SetPixel
;graphics.c,63 :: 		for(column = columnStart; column <= columnEnd; column++){
0x0138	0x051C    	INC Graphics_HorizontalLine_column_L0
;graphics.c,65 :: 		}
0x013A	0x80EA    	SJMP L_Graphics_HorizontalLine9
L_Graphics_HorizontalLine10:
;graphics.c,66 :: 		}
0x013C	0x22      	RET
; end of _Graphics_HorizontalLine
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,46 :: 		
;__Lib_Keypad4x4.c,51 :: 		
0x013D	0x751300  	MOV Keypad_Key_Press_rslt_L0, #0
;__Lib_Keypad4x4.c,52 :: 		
0x0140	0x751500  	MOV Keypad_Key_Press_loc_L0, #0
;__Lib_Keypad4x4.c,53 :: 		
0x0143	0x751600  	MOV Keypad_Key_Press_rowcnt_L0, #0
;__Lib_Keypad4x4.c,54 :: 		
0x0146	0x751710  	MOV Keypad_Key_Press_shifter_L0, #16
;__Lib_Keypad4x4.c,55 :: 		
L_Keypad_Key_Press0:
0x0149	0xC3      	CLR C
0x014A	0xE516    	MOV A, Keypad_Key_Press_rowcnt_L0
0x014C	0x9404    	SUBB A, #4
0x014E	0x5050    	JNC L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,56 :: 		
0x0150	0x7580F0  	MOV keypadPort, #240
;__Lib_Keypad4x4.c,57 :: 		
0x0153	0xE517    	MOV A, Keypad_Key_Press_shifter_L0
0x0155	0x64FF    	XRL A, #255
0x0157	0xF580    	MOV keypadPort, A
;__Lib_Keypad4x4.c,58 :: 		
0x0159	0x3121    	ACALL _Delay_1us
;__Lib_Keypad4x4.c,59 :: 		
0x015B	0x3121    	ACALL _Delay_1us
;__Lib_Keypad4x4.c,60 :: 		
0x015D	0xE580    	MOV A, keypadPort
0x015F	0x44F0    	ORL A, #240
0x0161	0xF8      	MOV R0, A
0x0162	0x850014  	MOV Keypad_Key_Press_kdata_L0, 0
;__Lib_Keypad4x4.c,61 :: 		
0x0165	0x6300FF  	XRL R0, #255
0x0168	0x850014  	MOV Keypad_Key_Press_kdata_L0, 0
;__Lib_Keypad4x4.c,62 :: 		
0x016B	0xE8      	MOV A, R0
0x016C	0x601B    	JZ L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,64 :: 		
0x016E	0x851513  	MOV Keypad_Key_Press_rslt_L0, Keypad_Key_Press_loc_L0+0
;__Lib_Keypad4x4.c,65 :: 		
L_Keypad_Key_Press3:
0x0171	0xE514    	MOV A, Keypad_Key_Press_kdata_L0
0x0173	0x6011    	JZ L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,66 :: 		
0x0175	0x7801    	MOV R0, #1
0x0177	0xE514    	MOV A, Keypad_Key_Press_kdata_L0
0x0179	0x08      	INC R0
0x017A	0x8002    	SJMP L__Keypad_Key_Press7
L__Keypad_Key_Press8:
0x017C	0xC3      	CLR C
0x017D	0x13      	RRC A
L__Keypad_Key_Press7:
0x017E	0xD8FC    	DJNZ R0, L__Keypad_Key_Press8
0x0180	0xF514    	MOV Keypad_Key_Press_kdata_L0, A
;__Lib_Keypad4x4.c,67 :: 		
0x0182	0x0513    	INC Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,68 :: 		
0x0184	0x80EB    	SJMP L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,70 :: 		
0x0186	0x751604  	MOV Keypad_Key_Press_rowcnt_L0, #4
;__Lib_Keypad4x4.c,71 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,72 :: 		
0x0189	0x7801    	MOV R0, #1
0x018B	0xE517    	MOV A, Keypad_Key_Press_shifter_L0
0x018D	0x08      	INC R0
0x018E	0x8002    	SJMP L__Keypad_Key_Press9
L__Keypad_Key_Press10:
0x0190	0xC3      	CLR C
0x0191	0x33      	RLC A
L__Keypad_Key_Press9:
0x0192	0xD8FC    	DJNZ R0, L__Keypad_Key_Press10
0x0194	0xF517    	MOV Keypad_Key_Press_shifter_L0, A
;__Lib_Keypad4x4.c,73 :: 		
0x0196	0xE515    	MOV A, Keypad_Key_Press_loc_L0
0x0198	0x2404    	ADD A, #4
0x019A	0xF515    	MOV Keypad_Key_Press_loc_L0, A
;__Lib_Keypad4x4.c,74 :: 		
0x019C	0x0516    	INC Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,75 :: 		
0x019E	0x80A9    	SJMP L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,77 :: 		
0x01A0	0xA813    	MOV R0, Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,78 :: 		
0x01A2	0x22      	RET
; end of _Keypad_Key_Press
_Display_Init:
;display.c,24 :: 		void Display_Init(){
;display.c,26 :: 		mRowOutputPort = 0x00;
0x01A3	0x759000  	MOV P1, #0
;display.c,27 :: 		mRedOutputPort = 0x00;
0x01A6	0x75A000  	MOV P2, #0
;display.c,28 :: 		mGreenOutputPort = 0x00;
0x01A9	0x75B000  	MOV P3, #0
;display.c,30 :: 		TMOD |= 0x01;
0x01AC	0x438901  	ORL TMOD, #1
;display.c,32 :: 		TH0 = 0xF9;
0x01AF	0x758CF9  	MOV TH0, #249
;display.c,33 :: 		TL0 = 0x7D;
0x01B2	0x758A7D  	MOV TL0, #125
;display.c,35 :: 		IE |= 0x82;
0x01B5	0x43A882  	ORL IE, #130
;display.c,37 :: 		TR0_bit = 1;
0x01B8	0xD28C    	SETB TR0_bit
;display.c,38 :: 		}
0x01BA	0x22      	RET
; end of _Display_Init
_Timer_Init:
;timer.c,17 :: 		void Timer_Init(){
;timer.c,18 :: 		mMiliseconds = 0;
0x01BB	0x750B00  	MOV timer_mMiliseconds, #0
0x01BE	0x750C00  	MOV timer_mMiliseconds+1, #0
0x01C1	0x750D00  	MOV timer_mMiliseconds+2, #0
0x01C4	0x750E00  	MOV timer_mMiliseconds+3, #0
;timer.c,20 :: 		TMOD |= 0x10;
0x01C7	0x438910  	ORL TMOD, #16
;timer.c,22 :: 		TH1 = 0xFC;
0x01CA	0x758DFC  	MOV TH1, #252
;timer.c,23 :: 		TL1 = 0xBE;
0x01CD	0x758BBE  	MOV TL1, #190
;timer.c,25 :: 		IE |= 0x88;
0x01D0	0x43A888  	ORL IE, #136
;timer.c,27 :: 		TR1_bit = 1;
0x01D3	0xD28E    	SETB TR1_bit
;timer.c,28 :: 		}
0x01D5	0x22      	RET
; end of _Timer_Init
_Keypad_Init:
;__Lib_Keypad4x4.c,40 :: 		
;__Lib_Keypad4x4.c,41 :: 		
0x01D6	0x7580FF  	MOV keypadPort, #255
;__Lib_Keypad4x4.c,42 :: 		
0x01D9	0x22      	RET
; end of _Keypad_Init
_Delay_10us:
;__Lib_Delays.c,88 :: 		void Delay_10us() {
;__Lib_Delays.c,89 :: 		Delay_us(10);
0x01DA	0x7F03    	MOV R7, 3
0x01DC	0xDFFE    	DJNZ R7, PC-2
0x01DE	0x00      	NOP
;__Lib_Delays.c,90 :: 		}
0x01DF	0x22      	RET
; end of _Delay_10us
_ConnectFour_Init:
;connectfour.c,29 :: 		void ConnectFour_Init(){
;connectfour.c,31 :: 		mCurrentPlayerColor = COLOR_RED;
0x01E0	0x750801  	MOV connectfour_mCurrentPlayerColor, #1
;connectfour.c,32 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_RED);
0x01E3	0x751807  	MOV FARG_Graphics_HorizontalLine_row, #7
0x01E6	0x751900  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x01E9	0x751A07  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x01EC	0x751B01  	MOV FARG_Graphics_HorizontalLine_color, #1
0x01EF	0x3123    	ACALL _Graphics_HorizontalLine
;connectfour.c,33 :: 		}
0x01F1	0x22      	RET
; end of _ConnectFour_Init
_ConnectFour_CheckWinner:
;connectfour.c,88 :: 		unsigned char ConnectFour_CheckWinner(){
;connectfour.c,91 :: 		unsigned char hits = 0;
0x01F2	0x751000  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,93 :: 		for(j = mDiscYPosition; j >= 0; j--){
0x01F5	0x850912  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner12:
0x01F8	0xC3      	CLR C
0x01F9	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x01FB	0x9400    	SUBB A, #0
0x01FD	0x404D    	JC L_ConnectFour_CheckWinner13
;connectfour.c,94 :: 		if(mGameMatrix[mDiscXPostition][j] == mCurrentPlayerColor){
0x01FF	0x850AF0  	MOV B, connectfour_mDiscXPostition+0
0x0202	0x7407    	MOV A, #7
0x0204	0xA4      	MUL AB
0x0205	0xF8      	MOV R0, A
0x0206	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0208	0x28      	ADD A, R0
0x0209	0xF8      	MOV R0, A
0x020A	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x020C	0xF8      	MOV R0, A
0x020D	0x8601    	MOV R1, @R0
0x020F	0xE9      	MOV A, R1
0x0210	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x0212	0x7032    	JNZ L_ConnectFour_CheckWinner15
;connectfour.c,95 :: 		mWinnersDiscsPosition[hits][0] = mDiscXPostition;
0x0214	0x7901    	MOV R1, #1
0x0216	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0218	0x09      	INC R1
0x0219	0x8002    	SJMP L__ConnectFour_CheckWinner86
L__ConnectFour_CheckWinner87:
0x021B	0xC3      	CLR C
0x021C	0x33      	RLC A
L__ConnectFour_CheckWinner86:
0x021D	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner87
0x021F	0xF8      	MOV R0, A
0x0220	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0222	0x28      	ADD A, R0
0x0223	0xF8      	MOV R0, A
0x0224	0xA60A    	MOV @R0, connectfour_mDiscXPostition
;connectfour.c,96 :: 		mWinnersDiscsPosition[hits][1] = j;
0x0226	0x7901    	MOV R1, #1
0x0228	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x022A	0x09      	INC R1
0x022B	0x8002    	SJMP L__ConnectFour_CheckWinner88
L__ConnectFour_CheckWinner89:
0x022D	0xC3      	CLR C
0x022E	0x33      	RLC A
L__ConnectFour_CheckWinner88:
0x022F	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner89
0x0231	0xF8      	MOV R0, A
0x0232	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0234	0x28      	ADD A, R0
0x0235	0xF8      	MOV R0, A
0x0236	0x08      	INC R0
0x0237	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,97 :: 		if(++hits == 4){
0x0239	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x023B	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x023D	0x6404    	XRL A, #4
0x023F	0x7003    	JNZ L_ConnectFour_CheckWinner16
;connectfour.c,98 :: 		return 1;
0x0241	0x7801    	MOV R0, #1
0x0243	0x22      	RET
;connectfour.c,99 :: 		}
L_ConnectFour_CheckWinner16:
;connectfour.c,100 :: 		}else{
0x0244	0x8002    	SJMP L_ConnectFour_CheckWinner17
L_ConnectFour_CheckWinner15:
;connectfour.c,101 :: 		break;
0x0246	0x8004    	SJMP L_ConnectFour_CheckWinner13
;connectfour.c,102 :: 		}
L_ConnectFour_CheckWinner17:
;connectfour.c,93 :: 		for(j = mDiscYPosition; j >= 0; j--){
0x0248	0x1512    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,103 :: 		}
0x024A	0x80AC    	SJMP L_ConnectFour_CheckWinner12
L_ConnectFour_CheckWinner13:
;connectfour.c,105 :: 		for(j = mDiscYPosition + 1; j < 7; j++){
0x024C	0xE509    	MOV A, connectfour_mDiscYPosition
0x024E	0x2401    	ADD A, #1
0x0250	0xF512    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner18:
0x0252	0xC3      	CLR C
0x0253	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x0255	0x9407    	SUBB A, #7
0x0257	0x504D    	JNC L_ConnectFour_CheckWinner19
;connectfour.c,106 :: 		if(mGameMatrix[mDiscXPostition][j] == mCurrentPlayerColor){
0x0259	0x850AF0  	MOV B, connectfour_mDiscXPostition+0
0x025C	0x7407    	MOV A, #7
0x025E	0xA4      	MUL AB
0x025F	0xF8      	MOV R0, A
0x0260	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0262	0x28      	ADD A, R0
0x0263	0xF8      	MOV R0, A
0x0264	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x0266	0xF8      	MOV R0, A
0x0267	0x8601    	MOV R1, @R0
0x0269	0xE9      	MOV A, R1
0x026A	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x026C	0x7032    	JNZ L_ConnectFour_CheckWinner21
;connectfour.c,107 :: 		mWinnersDiscsPosition[hits][0] = mDiscXPostition;
0x026E	0x7901    	MOV R1, #1
0x0270	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0272	0x09      	INC R1
0x0273	0x8002    	SJMP L__ConnectFour_CheckWinner90
L__ConnectFour_CheckWinner91:
0x0275	0xC3      	CLR C
0x0276	0x33      	RLC A
L__ConnectFour_CheckWinner90:
0x0277	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner91
0x0279	0xF8      	MOV R0, A
0x027A	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x027C	0x28      	ADD A, R0
0x027D	0xF8      	MOV R0, A
0x027E	0xA60A    	MOV @R0, connectfour_mDiscXPostition
;connectfour.c,108 :: 		mWinnersDiscsPosition[hits][1] = j;
0x0280	0x7901    	MOV R1, #1
0x0282	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0284	0x09      	INC R1
0x0285	0x8002    	SJMP L__ConnectFour_CheckWinner92
L__ConnectFour_CheckWinner93:
0x0287	0xC3      	CLR C
0x0288	0x33      	RLC A
L__ConnectFour_CheckWinner92:
0x0289	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner93
0x028B	0xF8      	MOV R0, A
0x028C	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x028E	0x28      	ADD A, R0
0x028F	0xF8      	MOV R0, A
0x0290	0x08      	INC R0
0x0291	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,109 :: 		if(++hits == 4){
0x0293	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x0295	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0297	0x6404    	XRL A, #4
0x0299	0x7003    	JNZ L_ConnectFour_CheckWinner22
;connectfour.c,110 :: 		return 1;
0x029B	0x7801    	MOV R0, #1
0x029D	0x22      	RET
;connectfour.c,111 :: 		}
L_ConnectFour_CheckWinner22:
;connectfour.c,112 :: 		}else{
0x029E	0x8002    	SJMP L_ConnectFour_CheckWinner23
L_ConnectFour_CheckWinner21:
;connectfour.c,113 :: 		break;
0x02A0	0x8004    	SJMP L_ConnectFour_CheckWinner19
;connectfour.c,114 :: 		}
L_ConnectFour_CheckWinner23:
;connectfour.c,105 :: 		for(j = mDiscYPosition + 1; j < 7; j++){
0x02A2	0x0512    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,115 :: 		}
0x02A4	0x80AC    	SJMP L_ConnectFour_CheckWinner18
L_ConnectFour_CheckWinner19:
;connectfour.c,117 :: 		hits = 0;
0x02A6	0x751000  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,119 :: 		for(i = mDiscXPostition, j = mDiscYPosition; i < 6 && j >= 0; i++, j--){
0x02A9	0x850A11  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPostition+0
0x02AC	0x850912  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner24:
0x02AF	0xC3      	CLR C
0x02B0	0xE511    	MOV A, ConnectFour_CheckWinner_i_L0
0x02B2	0x9406    	SUBB A, #6
0x02B4	0x5056    	JNC L_ConnectFour_CheckWinner25
0x02B6	0xC3      	CLR C
0x02B7	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x02B9	0x9400    	SUBB A, #0
0x02BB	0x404F    	JC L_ConnectFour_CheckWinner25
L__ConnectFour_CheckWinner85:
;connectfour.c,120 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x02BD	0x8511F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x02C0	0x7407    	MOV A, #7
0x02C2	0xA4      	MUL AB
0x02C3	0xF8      	MOV R0, A
0x02C4	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x02C6	0x28      	ADD A, R0
0x02C7	0xF8      	MOV R0, A
0x02C8	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x02CA	0xF8      	MOV R0, A
0x02CB	0x8601    	MOV R1, @R0
0x02CD	0xE9      	MOV A, R1
0x02CE	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x02D0	0x7032    	JNZ L_ConnectFour_CheckWinner29
;connectfour.c,121 :: 		mWinnersDiscsPosition[hits][0] = i;
0x02D2	0x7901    	MOV R1, #1
0x02D4	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x02D6	0x09      	INC R1
0x02D7	0x8002    	SJMP L__ConnectFour_CheckWinner94
L__ConnectFour_CheckWinner95:
0x02D9	0xC3      	CLR C
0x02DA	0x33      	RLC A
L__ConnectFour_CheckWinner94:
0x02DB	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner95
0x02DD	0xF8      	MOV R0, A
0x02DE	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x02E0	0x28      	ADD A, R0
0x02E1	0xF8      	MOV R0, A
0x02E2	0xA611    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,122 :: 		mWinnersDiscsPosition[hits][1] = j;
0x02E4	0x7901    	MOV R1, #1
0x02E6	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x02E8	0x09      	INC R1
0x02E9	0x8002    	SJMP L__ConnectFour_CheckWinner96
L__ConnectFour_CheckWinner97:
0x02EB	0xC3      	CLR C
0x02EC	0x33      	RLC A
L__ConnectFour_CheckWinner96:
0x02ED	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner97
0x02EF	0xF8      	MOV R0, A
0x02F0	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x02F2	0x28      	ADD A, R0
0x02F3	0xF8      	MOV R0, A
0x02F4	0x08      	INC R0
0x02F5	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,123 :: 		if(++hits == 4){
0x02F7	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x02F9	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x02FB	0x6404    	XRL A, #4
0x02FD	0x7003    	JNZ L_ConnectFour_CheckWinner30
;connectfour.c,124 :: 		return 1;
0x02FF	0x7801    	MOV R0, #1
0x0301	0x22      	RET
;connectfour.c,125 :: 		}
L_ConnectFour_CheckWinner30:
;connectfour.c,126 :: 		}else{
0x0302	0x8002    	SJMP L_ConnectFour_CheckWinner31
L_ConnectFour_CheckWinner29:
;connectfour.c,127 :: 		break;
0x0304	0x8006    	SJMP L_ConnectFour_CheckWinner25
;connectfour.c,128 :: 		}
L_ConnectFour_CheckWinner31:
;connectfour.c,119 :: 		for(i = mDiscXPostition, j = mDiscYPosition; i < 6 && j >= 0; i++, j--){
0x0306	0x0511    	INC ConnectFour_CheckWinner_i_L0
0x0308	0x1512    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,129 :: 		}
0x030A	0x80A3    	SJMP L_ConnectFour_CheckWinner24
L_ConnectFour_CheckWinner25:
;connectfour.c,131 :: 		for(i = mDiscXPostition - 1, j = mDiscYPosition + 1; i >= 0 && j < 7; i--, j++){
0x030C	0xC3      	CLR C
0x030D	0xE50A    	MOV A, connectfour_mDiscXPostition
0x030F	0x9401    	SUBB A, #1
0x0311	0xF511    	MOV ConnectFour_CheckWinner_i_L0, A
0x0313	0xE509    	MOV A, connectfour_mDiscYPosition
0x0315	0x2401    	ADD A, #1
0x0317	0xF512    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner32:
0x0319	0xC3      	CLR C
0x031A	0xE511    	MOV A, ConnectFour_CheckWinner_i_L0
0x031C	0x9400    	SUBB A, #0
0x031E	0x4056    	JC L_ConnectFour_CheckWinner33
0x0320	0xC3      	CLR C
0x0321	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x0323	0x9407    	SUBB A, #7
0x0325	0x504F    	JNC L_ConnectFour_CheckWinner33
L__ConnectFour_CheckWinner84:
;connectfour.c,132 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x0327	0x8511F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x032A	0x7407    	MOV A, #7
0x032C	0xA4      	MUL AB
0x032D	0xF8      	MOV R0, A
0x032E	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0330	0x28      	ADD A, R0
0x0331	0xF8      	MOV R0, A
0x0332	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x0334	0xF8      	MOV R0, A
0x0335	0x8601    	MOV R1, @R0
0x0337	0xE9      	MOV A, R1
0x0338	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x033A	0x7032    	JNZ L_ConnectFour_CheckWinner37
;connectfour.c,133 :: 		mWinnersDiscsPosition[hits][0] = i;
0x033C	0x7901    	MOV R1, #1
0x033E	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0340	0x09      	INC R1
0x0341	0x8002    	SJMP L__ConnectFour_CheckWinner98
L__ConnectFour_CheckWinner99:
0x0343	0xC3      	CLR C
0x0344	0x33      	RLC A
L__ConnectFour_CheckWinner98:
0x0345	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner99
0x0347	0xF8      	MOV R0, A
0x0348	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x034A	0x28      	ADD A, R0
0x034B	0xF8      	MOV R0, A
0x034C	0xA611    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,134 :: 		mWinnersDiscsPosition[hits][1] = j;
0x034E	0x7901    	MOV R1, #1
0x0350	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0352	0x09      	INC R1
0x0353	0x8002    	SJMP L__ConnectFour_CheckWinner100
L__ConnectFour_CheckWinner101:
0x0355	0xC3      	CLR C
0x0356	0x33      	RLC A
L__ConnectFour_CheckWinner100:
0x0357	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner101
0x0359	0xF8      	MOV R0, A
0x035A	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x035C	0x28      	ADD A, R0
0x035D	0xF8      	MOV R0, A
0x035E	0x08      	INC R0
0x035F	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,135 :: 		if(++hits == 4){
0x0361	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x0363	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0365	0x6404    	XRL A, #4
0x0367	0x7003    	JNZ L_ConnectFour_CheckWinner38
;connectfour.c,136 :: 		return 1;
0x0369	0x7801    	MOV R0, #1
0x036B	0x22      	RET
;connectfour.c,137 :: 		}
L_ConnectFour_CheckWinner38:
;connectfour.c,138 :: 		}else{
0x036C	0x8002    	SJMP L_ConnectFour_CheckWinner39
L_ConnectFour_CheckWinner37:
;connectfour.c,139 :: 		break;
0x036E	0x8006    	SJMP L_ConnectFour_CheckWinner33
;connectfour.c,140 :: 		}
L_ConnectFour_CheckWinner39:
;connectfour.c,131 :: 		for(i = mDiscXPostition - 1, j = mDiscYPosition + 1; i >= 0 && j < 7; i--, j++){
0x0370	0x1511    	DEC ConnectFour_CheckWinner_i_L0
0x0372	0x0512    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,141 :: 		}
0x0374	0x80A3    	SJMP L_ConnectFour_CheckWinner32
L_ConnectFour_CheckWinner33:
;connectfour.c,143 :: 		hits = 0;
0x0376	0x751000  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,145 :: 		for(i = mDiscXPostition, j = mDiscYPosition; i >= 0 && j >= 0; i--, j--){
0x0379	0x850A11  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPostition+0
0x037C	0x850912  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner40:
0x037F	0xC3      	CLR C
0x0380	0xE511    	MOV A, ConnectFour_CheckWinner_i_L0
0x0382	0x9400    	SUBB A, #0
0x0384	0x4056    	JC L_ConnectFour_CheckWinner41
0x0386	0xC3      	CLR C
0x0387	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x0389	0x9400    	SUBB A, #0
0x038B	0x404F    	JC L_ConnectFour_CheckWinner41
L__ConnectFour_CheckWinner83:
;connectfour.c,146 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x038D	0x8511F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x0390	0x7407    	MOV A, #7
0x0392	0xA4      	MUL AB
0x0393	0xF8      	MOV R0, A
0x0394	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0396	0x28      	ADD A, R0
0x0397	0xF8      	MOV R0, A
0x0398	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x039A	0xF8      	MOV R0, A
0x039B	0x8601    	MOV R1, @R0
0x039D	0xE9      	MOV A, R1
0x039E	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x03A0	0x7032    	JNZ L_ConnectFour_CheckWinner45
;connectfour.c,147 :: 		mWinnersDiscsPosition[hits][0] = i;
0x03A2	0x7901    	MOV R1, #1
0x03A4	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x03A6	0x09      	INC R1
0x03A7	0x8002    	SJMP L__ConnectFour_CheckWinner102
L__ConnectFour_CheckWinner103:
0x03A9	0xC3      	CLR C
0x03AA	0x33      	RLC A
L__ConnectFour_CheckWinner102:
0x03AB	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner103
0x03AD	0xF8      	MOV R0, A
0x03AE	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x03B0	0x28      	ADD A, R0
0x03B1	0xF8      	MOV R0, A
0x03B2	0xA611    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,148 :: 		mWinnersDiscsPosition[hits][1] = j;
0x03B4	0x7901    	MOV R1, #1
0x03B6	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x03B8	0x09      	INC R1
0x03B9	0x8002    	SJMP L__ConnectFour_CheckWinner104
L__ConnectFour_CheckWinner105:
0x03BB	0xC3      	CLR C
0x03BC	0x33      	RLC A
L__ConnectFour_CheckWinner104:
0x03BD	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner105
0x03BF	0xF8      	MOV R0, A
0x03C0	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x03C2	0x28      	ADD A, R0
0x03C3	0xF8      	MOV R0, A
0x03C4	0x08      	INC R0
0x03C5	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,149 :: 		if(++hits == 4){
0x03C7	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x03C9	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x03CB	0x6404    	XRL A, #4
0x03CD	0x7003    	JNZ L_ConnectFour_CheckWinner46
;connectfour.c,150 :: 		return 1;
0x03CF	0x7801    	MOV R0, #1
0x03D1	0x22      	RET
;connectfour.c,151 :: 		}
L_ConnectFour_CheckWinner46:
;connectfour.c,152 :: 		}else{
0x03D2	0x8002    	SJMP L_ConnectFour_CheckWinner47
L_ConnectFour_CheckWinner45:
;connectfour.c,153 :: 		break;
0x03D4	0x8006    	SJMP L_ConnectFour_CheckWinner41
;connectfour.c,154 :: 		}
L_ConnectFour_CheckWinner47:
;connectfour.c,145 :: 		for(i = mDiscXPostition, j = mDiscYPosition; i >= 0 && j >= 0; i--, j--){
0x03D6	0x1511    	DEC ConnectFour_CheckWinner_i_L0
0x03D8	0x1512    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,155 :: 		}
0x03DA	0x80A3    	SJMP L_ConnectFour_CheckWinner40
L_ConnectFour_CheckWinner41:
;connectfour.c,157 :: 		for(i = mDiscXPostition + 1, j = mDiscYPosition + 1; i < 6 && j < 7; i++, j++){
0x03DC	0xE50A    	MOV A, connectfour_mDiscXPostition
0x03DE	0x2401    	ADD A, #1
0x03E0	0xF511    	MOV ConnectFour_CheckWinner_i_L0, A
0x03E2	0xE509    	MOV A, connectfour_mDiscYPosition
0x03E4	0x2401    	ADD A, #1
0x03E6	0xF512    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner48:
0x03E8	0xC3      	CLR C
0x03E9	0xE511    	MOV A, ConnectFour_CheckWinner_i_L0
0x03EB	0x9406    	SUBB A, #6
0x03ED	0x5056    	JNC L_ConnectFour_CheckWinner49
0x03EF	0xC3      	CLR C
0x03F0	0xE512    	MOV A, ConnectFour_CheckWinner_j_L0
0x03F2	0x9407    	SUBB A, #7
0x03F4	0x504F    	JNC L_ConnectFour_CheckWinner49
L__ConnectFour_CheckWinner82:
;connectfour.c,158 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x03F6	0x8511F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x03F9	0x7407    	MOV A, #7
0x03FB	0xA4      	MUL AB
0x03FC	0xF8      	MOV R0, A
0x03FD	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x03FF	0x28      	ADD A, R0
0x0400	0xF8      	MOV R0, A
0x0401	0x2512    	ADD A, ConnectFour_CheckWinner_j_L0
0x0403	0xF8      	MOV R0, A
0x0404	0x8601    	MOV R1, @R0
0x0406	0xE9      	MOV A, R1
0x0407	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x0409	0x7032    	JNZ L_ConnectFour_CheckWinner53
;connectfour.c,159 :: 		mWinnersDiscsPosition[hits][0] = i;
0x040B	0x7901    	MOV R1, #1
0x040D	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x040F	0x09      	INC R1
0x0410	0x8002    	SJMP L__ConnectFour_CheckWinner106
L__ConnectFour_CheckWinner107:
0x0412	0xC3      	CLR C
0x0413	0x33      	RLC A
L__ConnectFour_CheckWinner106:
0x0414	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner107
0x0416	0xF8      	MOV R0, A
0x0417	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0419	0x28      	ADD A, R0
0x041A	0xF8      	MOV R0, A
0x041B	0xA611    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,160 :: 		mWinnersDiscsPosition[hits][1] = j;
0x041D	0x7901    	MOV R1, #1
0x041F	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0421	0x09      	INC R1
0x0422	0x8002    	SJMP L__ConnectFour_CheckWinner108
L__ConnectFour_CheckWinner109:
0x0424	0xC3      	CLR C
0x0425	0x33      	RLC A
L__ConnectFour_CheckWinner108:
0x0426	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner109
0x0428	0xF8      	MOV R0, A
0x0429	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x042B	0x28      	ADD A, R0
0x042C	0xF8      	MOV R0, A
0x042D	0x08      	INC R0
0x042E	0xA612    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,161 :: 		if(++hits == 4){
0x0430	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x0432	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0434	0x6404    	XRL A, #4
0x0436	0x7003    	JNZ L_ConnectFour_CheckWinner54
;connectfour.c,162 :: 		return 1;
0x0438	0x7801    	MOV R0, #1
0x043A	0x22      	RET
;connectfour.c,163 :: 		}
L_ConnectFour_CheckWinner54:
;connectfour.c,164 :: 		}else{
0x043B	0x8002    	SJMP L_ConnectFour_CheckWinner55
L_ConnectFour_CheckWinner53:
;connectfour.c,165 :: 		break;
0x043D	0x8006    	SJMP L_ConnectFour_CheckWinner49
;connectfour.c,166 :: 		}
L_ConnectFour_CheckWinner55:
;connectfour.c,157 :: 		for(i = mDiscXPostition + 1, j = mDiscYPosition + 1; i < 6 && j < 7; i++, j++){
0x043F	0x0511    	INC ConnectFour_CheckWinner_i_L0
0x0441	0x0512    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,167 :: 		}
0x0443	0x80A3    	SJMP L_ConnectFour_CheckWinner48
L_ConnectFour_CheckWinner49:
;connectfour.c,169 :: 		hits = 0;
0x0445	0x751000  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,171 :: 		for(i = mDiscXPostition; i < 6; i++){
0x0448	0x850A11  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPostition+0
L_ConnectFour_CheckWinner56:
0x044B	0xC3      	CLR C
0x044C	0xE511    	MOV A, ConnectFour_CheckWinner_i_L0
0x044E	0x9406    	SUBB A, #6
0x0450	0x504D    	JNC L_ConnectFour_CheckWinner57
;connectfour.c,172 :: 		if(mGameMatrix[i][mDiscYPosition] == mCurrentPlayerColor){
0x0452	0x8511F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x0455	0x7407    	MOV A, #7
0x0457	0xA4      	MUL AB
0x0458	0xF8      	MOV R0, A
0x0459	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x045B	0x28      	ADD A, R0
0x045C	0xF8      	MOV R0, A
0x045D	0x2509    	ADD A, connectfour_mDiscYPosition
0x045F	0xF8      	MOV R0, A
0x0460	0x8601    	MOV R1, @R0
0x0462	0xE9      	MOV A, R1
0x0463	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x0465	0x7032    	JNZ L_ConnectFour_CheckWinner59
;connectfour.c,173 :: 		mWinnersDiscsPosition[hits][0] = i;
0x0467	0x7901    	MOV R1, #1
0x0469	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x046B	0x09      	INC R1
0x046C	0x8002    	SJMP L__ConnectFour_CheckWinner110
L__ConnectFour_CheckWinner111:
0x046E	0xC3      	CLR C
0x046F	0x33      	RLC A
L__ConnectFour_CheckWinner110:
0x0470	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner111
0x0472	0xF8      	MOV R0, A
0x0473	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0475	0x28      	ADD A, R0
0x0476	0xF8      	MOV R0, A
0x0477	0xA611    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,174 :: 		mWinnersDiscsPosition[hits][1] = mDiscYPosition;
0x0479	0x7901    	MOV R1, #1
0x047B	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x047D	0x09      	INC R1
0x047E	0x8002    	SJMP L__ConnectFour_CheckWinner112
L__ConnectFour_CheckWinner113:
0x0480	0xC3      	CLR C
0x0481	0x33      	RLC A
L__ConnectFour_CheckWinner112:
0x0482	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner113
0x0484	0xF8      	MOV R0, A
0x0485	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0487	0x28      	ADD A, R0
0x0488	0xF8      	MOV R0, A
0x0489	0x08      	INC R0
0x048A	0xA609    	MOV @R0, connectfour_mDiscYPosition
;connectfour.c,175 :: 		if(++hits == 4){
0x048C	0x0510    	INC ConnectFour_CheckWinner_hits_L0
0x048E	0xE510    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0490	0x6404    	XRL A, #4
0x0492	0x7003    	JNZ L_ConnectFour_CheckWinner60
;connectfour.c,176 :: 		return 1;
0x0494	0x7801    	MOV R0, #1
0x0496	0x22      	RET
;connectfour.c,177 :: 		}
L_ConnectFour_CheckWinner60:
;connectfour.c,178 :: 		}else{
0x0497	0x8002    	SJMP L_ConnectFour_CheckWinner61
L_ConnectFour_CheckWinner59:
;connectfour.c,179 :: 		break;
0x0499	0x8004    	SJMP L_ConnectFour_CheckWinner57
;connectfour.c,180 :: 		}
L_ConnectFour_CheckWinner61:
;connectfour.c,171 :: 		for(i = mDiscXPostition; i < 6; i++){
0x049B	0x0511    	INC ConnectFour_CheckWinner_i_L0
;connectfour.c,181 :: 		}
0x049D	0x80AC    	SJMP L_ConnectFour_CheckWinner56
L_ConnectFour_CheckWinner57:
;connectfour.c,182 :: 		return 0;
0x049F	0x7800    	MOV R0, #0
;connectfour.c,183 :: 		}
0x04A1	0x22      	RET
; end of _ConnectFour_CheckWinner
_ConnectFour_SwitchPlayer:
;connectfour.c,40 :: 		void ConnectFour_SwitchPlayer(){
;connectfour.c,41 :: 		if(mCurrentPlayerColor == COLOR_RED){
0x04A2	0xE508    	MOV A, connectfour_mCurrentPlayerColor
0x04A4	0x6401    	XRL A, #1
0x04A6	0x7013    	JNZ L_ConnectFour_SwitchPlayer0
;connectfour.c,42 :: 		mCurrentPlayerColor = COLOR_GREEN;
0x04A8	0x750802  	MOV connectfour_mCurrentPlayerColor, #2
;connectfour.c,43 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_GREEN);
0x04AB	0x751807  	MOV FARG_Graphics_HorizontalLine_row, #7
0x04AE	0x751900  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x04B1	0x751A07  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x04B4	0x751B02  	MOV FARG_Graphics_HorizontalLine_color, #2
0x04B7	0x3123    	ACALL _Graphics_HorizontalLine
;connectfour.c,44 :: 		}else if(mCurrentPlayerColor == COLOR_GREEN){
0x04B9	0x8017    	SJMP L_ConnectFour_SwitchPlayer1
L_ConnectFour_SwitchPlayer0:
0x04BB	0xE508    	MOV A, connectfour_mCurrentPlayerColor
0x04BD	0x6402    	XRL A, #2
0x04BF	0x7011    	JNZ L_ConnectFour_SwitchPlayer2
;connectfour.c,45 :: 		mCurrentPlayerColor = COLOR_RED;
0x04C1	0x750801  	MOV connectfour_mCurrentPlayerColor, #1
;connectfour.c,46 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_RED);
0x04C4	0x751807  	MOV FARG_Graphics_HorizontalLine_row, #7
0x04C7	0x751900  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x04CA	0x751A07  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x04CD	0x751B01  	MOV FARG_Graphics_HorizontalLine_color, #1
0x04D0	0x3123    	ACALL _Graphics_HorizontalLine
;connectfour.c,47 :: 		}
L_ConnectFour_SwitchPlayer2:
L_ConnectFour_SwitchPlayer1:
;connectfour.c,48 :: 		}
0x04D2	0x22      	RET
; end of _ConnectFour_SwitchPlayer
_Display_SetOutput:
;display.c,45 :: 		void Display_SetOutput(unsigned char row, unsigned char red, unsigned char green){
;display.c,47 :: 		mRowOutputPort = 0x00;
0x04D3	0x759000  	MOV P1, #0
;display.c,48 :: 		mRedOutputPort = 0x00;
0x04D6	0x75A000  	MOV P2, #0
;display.c,49 :: 		mGreenOutputPort = 0x00;
0x04D9	0x75B000  	MOV P3, #0
;display.c,51 :: 		mRedOutputPort = red;
0x04DC	0x8521A0  	MOV P2, FARG_Display_SetOutput_red+0
;display.c,52 :: 		mGreenOutputPort = green;
0x04DF	0x8522B0  	MOV P3, FARG_Display_SetOutput_green+0
;display.c,54 :: 		mRowOutputPort = row;
0x04E2	0x852090  	MOV P1, FARG_Display_SetOutput_row+0
;display.c,55 :: 		}
0x04E5	0x22      	RET
; end of _Display_SetOutput
_Init:
;main.c,11 :: 		void Init(){
;main.c,12 :: 		Timer_Init();
0x04E6	0x31BB    	ACALL _Timer_Init
;main.c,13 :: 		Keypad_Init();
0x04E8	0x31D6    	ACALL _Keypad_Init
;main.c,14 :: 		Display_Init();
0x04EA	0x31A3    	ACALL _Display_Init
;main.c,15 :: 		ConnectFour_Init();
0x04EC	0x31E0    	ACALL _ConnectFour_Init
;main.c,16 :: 		}
0x04EE	0x22      	RET
; end of _Init
_ConnectFour_InsertDisc:
;connectfour.c,56 :: 		unsigned char ConnectFour_InsertDisc(unsigned char column){
;connectfour.c,60 :: 		for(i = 5; i >= 0; i--){
0x04EF	0x751105  	MOV ConnectFour_InsertDisc_i_L0, #5
L_ConnectFour_InsertDisc3:
0x04F2	0xC3      	CLR C
0x04F3	0x7400    	MOV A, #0
0x04F5	0x6480    	XRL A, #128
0x04F7	0xF8      	MOV R0, A
0x04F8	0xE511    	MOV A, ConnectFour_InsertDisc_i_L0
0x04FA	0x6480    	XRL A, #128
0x04FC	0x98      	SUBB A, R0
0x04FD	0x4047    	JC L_ConnectFour_InsertDisc4
;connectfour.c,61 :: 		if(mGameMatrix[i][column - 1] == COLOR_BLACK){
0x04FF	0x8511F0  	MOV B, ConnectFour_InsertDisc_i_L0+0
0x0502	0x7407    	MOV A, #7
0x0504	0xA4      	MUL AB
0x0505	0xF8      	MOV R0, A
0x0506	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0508	0x28      	ADD A, R0
0x0509	0xFA      	MOV R2, A
0x050A	0xC3      	CLR C
0x050B	0xE510    	MOV A, FARG_ConnectFour_InsertDisc_column
0x050D	0x9401    	SUBB A, #1
0x050F	0xF8      	MOV R0, A
0x0510	0xE4      	CLR A
0x0511	0x9400    	SUBB A, #0
0x0513	0xF9      	MOV R1, A
0x0514	0xEA      	MOV A, R2
0x0515	0x28      	ADD A, R0
0x0516	0xF8      	MOV R0, A
0x0517	0x8601    	MOV R1, @R0
0x0519	0xE9      	MOV A, R1
0x051A	0x7026    	JNZ L_ConnectFour_InsertDisc6
;connectfour.c,62 :: 		mGameMatrix[i][column - 1] = mCurrentPlayerColor;
0x051C	0x8511F0  	MOV B, ConnectFour_InsertDisc_i_L0+0
0x051F	0x7407    	MOV A, #7
0x0521	0xA4      	MUL AB
0x0522	0xF8      	MOV R0, A
0x0523	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0525	0x28      	ADD A, R0
0x0526	0xFA      	MOV R2, A
0x0527	0xC3      	CLR C
0x0528	0xE510    	MOV A, FARG_ConnectFour_InsertDisc_column
0x052A	0x9401    	SUBB A, #1
0x052C	0xF8      	MOV R0, A
0x052D	0xE4      	CLR A
0x052E	0x9400    	SUBB A, #0
0x0530	0xF9      	MOV R1, A
0x0531	0xEA      	MOV A, R2
0x0532	0x28      	ADD A, R0
0x0533	0xF8      	MOV R0, A
0x0534	0xA608    	MOV @R0, connectfour_mCurrentPlayerColor
;connectfour.c,63 :: 		mDiscXPostition = i;
0x0536	0x85110A  	MOV connectfour_mDiscXPostition, ConnectFour_InsertDisc_i_L0+0
;connectfour.c,64 :: 		mDiscYPosition = column - 1;
0x0539	0xC3      	CLR C
0x053A	0xE510    	MOV A, FARG_ConnectFour_InsertDisc_column
0x053C	0x9401    	SUBB A, #1
0x053E	0xF509    	MOV connectfour_mDiscYPosition, A
;connectfour.c,65 :: 		break;
0x0540	0x8004    	SJMP L_ConnectFour_InsertDisc4
;connectfour.c,66 :: 		}
L_ConnectFour_InsertDisc6:
;connectfour.c,60 :: 		for(i = 5; i >= 0; i--){
0x0542	0x1511    	DEC ConnectFour_InsertDisc_i_L0
;connectfour.c,67 :: 		}
0x0544	0x80AC    	SJMP L_ConnectFour_InsertDisc3
L_ConnectFour_InsertDisc4:
;connectfour.c,69 :: 		for(j = 0; j < i; j++){
0x0546	0x751200  	MOV ConnectFour_InsertDisc_j_L0, #0
L_ConnectFour_InsertDisc7:
0x0549	0xC3      	CLR C
0x054A	0xE511    	MOV A, ConnectFour_InsertDisc_i_L0
0x054C	0x6480    	XRL A, #128
0x054E	0xF8      	MOV R0, A
0x054F	0xE512    	MOV A, ConnectFour_InsertDisc_j_L0
0x0551	0x6480    	XRL A, #128
0x0553	0x98      	SUBB A, R0
0x0554	0x5023    	JNC L_ConnectFour_InsertDisc8
;connectfour.c,70 :: 		Graphics_SetPixel(j, column, mCurrentPlayerColor);
0x0556	0x85121D  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_j_L0+0
0x0559	0x85101E  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x055C	0x85081F  	MOV FARG_Graphics_SetPixel_color, connectfour_mCurrentPlayerColor+0
0x055F	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,71 :: 		Delay_ms(100);
0x0561	0x7EA3    	MOV R6, 163
0x0563	0x7F1E    	MOV R7, 30
0x0565	0xDFFE    	DJNZ R7, PC-2
0x0567	0xDEFC    	DJNZ R6, PC-4
0x0569	0x00      	NOP
;connectfour.c,72 :: 		Graphics_SetPixel(j, column, COLOR_BLACK);
0x056A	0x85121D  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_j_L0+0
0x056D	0x85101E  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x0570	0x751F00  	MOV FARG_Graphics_SetPixel_color, #0
0x0573	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,69 :: 		for(j = 0; j < i; j++){
0x0575	0x0512    	INC ConnectFour_InsertDisc_j_L0
;connectfour.c,73 :: 		}
0x0577	0x80D0    	SJMP L_ConnectFour_InsertDisc7
L_ConnectFour_InsertDisc8:
;connectfour.c,75 :: 		if(i >= 0){
0x0579	0xC3      	CLR C
0x057A	0x7400    	MOV A, #0
0x057C	0x6480    	XRL A, #128
0x057E	0xF8      	MOV R0, A
0x057F	0xE511    	MOV A, ConnectFour_InsertDisc_i_L0
0x0581	0x6480    	XRL A, #128
0x0583	0x98      	SUBB A, R0
0x0584	0x400E    	JC L_ConnectFour_InsertDisc10
;connectfour.c,76 :: 		Graphics_SetPixel(i, column, mCurrentPlayerColor);
0x0586	0x85111D  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_i_L0+0
0x0589	0x85101E  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x058C	0x85081F  	MOV FARG_Graphics_SetPixel_color, connectfour_mCurrentPlayerColor+0
0x058F	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,77 :: 		return 1;
0x0591	0x7801    	MOV R0, #1
0x0593	0x22      	RET
;connectfour.c,78 :: 		}else{
L_ConnectFour_InsertDisc10:
;connectfour.c,79 :: 		return 0;
0x0594	0x7800    	MOV R0, #0
;connectfour.c,81 :: 		}
0x0596	0x22      	RET
; end of _ConnectFour_InsertDisc
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x0597	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x0598	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x0599	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x059A	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x059B	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x059C	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x059E	0x22      	RET
; end of ___CC2D
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,81 :: 		
;__Lib_Keypad4x4.c,85 :: 		
0x059F	0x313D    	ACALL _Keypad_Key_Press
0x05A1	0x850010  	MOV Keypad_Key_Click_rslt_L0, 0
;__Lib_Keypad4x4.c,87 :: 		
L_Keypad_Key_Click5:
0x05A4	0xE580    	MOV A, keypadPort
0x05A6	0x540F    	ANL A, #15
0x05A8	0xF9      	MOV R1, A
0x05A9	0x640F    	XRL A, #15
0x05AB	0x6004    	JZ L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,88 :: 		
0x05AD	0x31DA    	ACALL _Delay_10us
0x05AF	0x80F3    	SJMP L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,90 :: 		
0x05B1	0xA810    	MOV R0, Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,91 :: 		
0x05B3	0x22      	RET
; end of _Keypad_Key_Click
_Display_Refresh:
0x05B4	0xC000    	PUSH R0
0x05B6	0xC001    	PUSH R1
0x05B8	0xC002    	PUSH R2
0x05BA	0xC0D0    	PUSH PSW
0x05BC	0xC0E0    	PUSH ACC
0x05BE	0xC0F0    	PUSH B
0x05C0	0xC082    	PUSH DP0L
0x05C2	0xC083    	PUSH DP0H
;display.c,62 :: 		void Display_Refresh() iv IVT_ADDR_ET0 {
;display.c,65 :: 		TR0_bit = 0;
0x05C4	0xC28C    	CLR TR0_bit
;display.c,67 :: 		TH0 = 0xF9;
0x05C6	0x758CF9  	MOV TH0, #249
;display.c,68 :: 		TL0 = 0x7D;
0x05C9	0x758A7D  	MOV TL0, #125
;display.c,70 :: 		Display_SetOutput(gMatrixRow[i], gMatrixRed[i], gMatrixGreen[i]);
0x05CC	0xE538    	MOV A, Display_Refresh_i_L0
0x05CE	0x24DB    	ADD A, lo_addr(_gMatrixRow)
0x05D0	0xF9      	MOV R1, A
0x05D1	0xE4      	CLR A
0x05D2	0x3406    	ADDC A, hi_addr(_gMatrixRow)
0x05D4	0xFA      	MOV R2, A
0x05D5	0x850182  	MOV DP0L, 1
0x05D8	0x850283  	MOV DP0H, 2
0x05DB	0xE4      	CLR A
0x05DC	0x93      	MOVC A, @A+DPTR
0x05DD	0xF8      	MOV R0, A
0x05DE	0x850020  	MOV FARG_Display_SetOutput_row, 0
0x05E1	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x05E3	0x2538    	ADD A, Display_Refresh_i_L0
0x05E5	0xF8      	MOV R0, A
0x05E6	0x8621    	MOV FARG_Display_SetOutput_red, @R0
0x05E8	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x05EA	0x2538    	ADD A, Display_Refresh_i_L0
0x05EC	0xF8      	MOV R0, A
0x05ED	0x8622    	MOV FARG_Display_SetOutput_green, @R0
0x05EF	0x91D3    	ACALL _Display_SetOutput
;display.c,71 :: 		i++;
0x05F1	0x0538    	INC Display_Refresh_i_L0
;display.c,73 :: 		if(i == 8){
0x05F3	0xE538    	MOV A, Display_Refresh_i_L0
0x05F5	0x6408    	XRL A, #8
0x05F7	0x7003    	JNZ L_Display_Refresh0
;display.c,74 :: 		i = 0;
0x05F9	0x753800  	MOV Display_Refresh_i_L0, #0
;display.c,75 :: 		}
L_Display_Refresh0:
;display.c,77 :: 		TR0_bit = 1;
0x05FC	0xD28C    	SETB TR0_bit
;display.c,78 :: 		}
0x05FE	0xD083    	POP DP0H
0x0600	0xD082    	POP DP0L
0x0602	0xD0F0    	POP B
0x0604	0xD0E0    	POP ACC
0x0606	0xD0D0    	POP PSW
0x0608	0xD002    	POP R2
0x060A	0xD001    	POP R1
0x060C	0xD000    	POP R0
0x060E	0x32      	RETI
; end of _Display_Refresh
_main:
0x060F	0x758180  	MOV SP, #128
0x0612	0x1206E4  	LCALL 1764
;main.c,18 :: 		void main() {
;main.c,29 :: 		Init();
0x0615	0x91E6    	ACALL _Init
;main.c,32 :: 		do{
L_main0:
;main.c,33 :: 		do{
L_main3:
;main.c,35 :: 		do{
L_main6:
;main.c,36 :: 		keyIndex = Keypad_Key_Click();
0x0617	0xB19F    	ACALL _Keypad_Key_Click
;main.c,37 :: 		key = keys[keyIndex];
0x0619	0xE8      	MOV A, R0
0x061A	0x24C2    	ADD A, lo_addr(_keys)
0x061C	0xF8      	MOV R0, A
0x061D	0xE4      	CLR A
0x061E	0x3406    	ADDC A, hi_addr(_keys)
0x0620	0xF9      	MOV R1, A
0x0621	0x850082  	MOV DP0L, 0
0x0624	0x850183  	MOV DP0H, 1
0x0627	0xE4      	CLR A
0x0628	0x93      	MOVC A, @A+DPTR
0x0629	0xFA      	MOV R2, A
0x062A	0x85020F  	MOV main_key_L0, 2
;main.c,38 :: 		}while(key < '1' || key > '7');
0x062D	0xC3      	CLR C
0x062E	0xEA      	MOV A, R2
0x062F	0x9431    	SUBB A, #49
0x0631	0x40E4    	JC L_main6
0x0633	0xD3      	SETB C
0x0634	0xE50F    	MOV A, main_key_L0
0x0636	0x9437    	SUBB A, #55
0x0638	0x50DD    	JNC L_main6
L__main12:
;main.c,40 :: 		discInserted = ConnectFour_InsertDisc(key - 48);
0x063A	0xC3      	CLR C
0x063B	0xE50F    	MOV A, main_key_L0
0x063D	0x9430    	SUBB A, #48
0x063F	0xF510    	MOV FARG_ConnectFour_InsertDisc_column, A
0x0641	0x91EF    	ACALL _ConnectFour_InsertDisc
;main.c,41 :: 		} while(discInserted == 0);
0x0643	0xE8      	MOV A, R0
0x0644	0x60D1    	JZ L_main3
;main.c,43 :: 		hasWinner = ConnectFour_CheckWinner();
0x0646	0x31F2    	ACALL _ConnectFour_CheckWinner
;main.c,70 :: 		if(!hasWinner){
0x0648	0xE8      	MOV A, R0
0x0649	0x7002    	JNZ L_main11
;main.c,72 :: 		ConnectFour_SwitchPlayer();
0x064B	0x91A2    	ACALL _ConnectFour_SwitchPlayer
;main.c,73 :: 		}
L_main11:
;main.c,74 :: 		} while(1);
0x064D	0x80C8    	SJMP L_main0
;main.c,76 :: 		}
0x064F	0x80FE    	SJMP #254
; end of _main
_Timer_Tick:
0x0651	0xC0D0    	PUSH PSW
0x0653	0xC0E0    	PUSH ACC
0x0655	0xC0F0    	PUSH B
0x0657	0xC082    	PUSH DP0L
0x0659	0xC083    	PUSH DP0H
;timer.c,44 :: 		void Timer_Tick() iv IVT_ADDR_ET1 {
;timer.c,46 :: 		TR1_bit = 0;
0x065B	0xC28E    	CLR TR1_bit
;timer.c,48 :: 		TH1 = 0xFC;
0x065D	0x758DFC  	MOV TH1, #252
;timer.c,49 :: 		TL1 = 0xBE;
0x0660	0x758BBE  	MOV TL1, #190
;timer.c,51 :: 		mMiliseconds++;
0x0663	0x7401    	MOV A, #1
0x0665	0x250B    	ADD A, timer_mMiliseconds
0x0667	0xF50B    	MOV timer_mMiliseconds, A
0x0669	0x7400    	MOV A, #0
0x066B	0x350C    	ADDC A, timer_mMiliseconds+1
0x066D	0xF50C    	MOV timer_mMiliseconds+1, A
0x066F	0x7400    	MOV A, #0
0x0671	0x350D    	ADDC A, timer_mMiliseconds+2
0x0673	0xF50D    	MOV timer_mMiliseconds+2, A
0x0675	0x7400    	MOV A, #0
0x0677	0x350E    	ADDC A, timer_mMiliseconds+3
0x0679	0xF50E    	MOV timer_mMiliseconds+3, A
;timer.c,53 :: 		TR1_bit = 1;
0x067B	0xD28E    	SETB TR1_bit
;timer.c,54 :: 		}
0x067D	0xD083    	POP DP0H
0x067F	0xD082    	POP DP0L
0x0681	0xD0F0    	POP B
0x0683	0xD0E0    	POP ACC
0x0685	0xD0D0    	POP PSW
0x0687	0x32      	RETI
; end of _Timer_Tick
0x06E4	0x7830    	MOV R0, 48
0x06E6	0x7908    	MOV R1, 8
0x06E8	0x7582D3  	MOV DP0L, 211
0x06EB	0x758306  	MOV DP0H, 6
0x06EE	0x120597  	LCALL 1431
0x06F1	0x7838    	MOV R0, 56
0x06F3	0x7901    	MOV R1, 1
0x06F5	0x7582E3  	MOV DP0L, 227
0x06F8	0x758306  	MOV DP0H, 6
0x06FB	0x120597  	LCALL 1431
0x06FE	0x7839    	MOV R0, 57
0x0700	0x793A    	MOV R1, 58
0x0702	0x758288  	MOV DP0L, 136
0x0705	0x758306  	MOV DP0H, 6
0x0708	0x120597  	LCALL 1431
0x070B	0x22      	RET
;connectfour.c,0 :: ?ICSconnectfour_mWinnersDiscsPosition
0x0688	0x000000 ;?ICSconnectfour_mWinnersDiscsPosition+0
0x068B	0x000000 ;?ICSconnectfour_mWinnersDiscsPosition+3
0x068E	0x0000 ;?ICSconnectfour_mWinnersDiscsPosition+6
; end of ?ICSconnectfour_mWinnersDiscsPosition
;connectfour.c,0 :: ?ICSconnectfour_mGameMatrix
0x0690	0x000000 ;?ICSconnectfour_mGameMatrix+0
0x0693	0x000000 ;?ICSconnectfour_mGameMatrix+3
0x0696	0x000000 ;?ICSconnectfour_mGameMatrix+6
0x0699	0x000000 ;?ICSconnectfour_mGameMatrix+9
0x069C	0x000000 ;?ICSconnectfour_mGameMatrix+12
0x069F	0x000000 ;?ICSconnectfour_mGameMatrix+15
0x06A2	0x000000 ;?ICSconnectfour_mGameMatrix+18
0x06A5	0x000000 ;?ICSconnectfour_mGameMatrix+21
0x06A8	0x000000 ;?ICSconnectfour_mGameMatrix+24
0x06AB	0x000000 ;?ICSconnectfour_mGameMatrix+27
0x06AE	0x000000 ;?ICSconnectfour_mGameMatrix+30
0x06B1	0x000000 ;?ICSconnectfour_mGameMatrix+33
0x06B4	0x000000 ;?ICSconnectfour_mGameMatrix+36
0x06B7	0x000000 ;?ICSconnectfour_mGameMatrix+39
; end of ?ICSconnectfour_mGameMatrix
;display.c,0 :: ?ICS_gMatrixRed
0x06BA	0x000000 ;?ICS_gMatrixRed+0
0x06BD	0x000000 ;?ICS_gMatrixRed+3
0x06C0	0x0000 ;?ICS_gMatrixRed+6
; end of ?ICS_gMatrixRed
;main.c,8 :: _keys
0x06C2	0x003132 ;_keys+0
0x06C5	0x334134 ;_keys+3
0x06C8	0x353642 ;_keys+6
0x06CB	0x373839 ;_keys+9
0x06CE	0x432A30 ;_keys+12
0x06D1	0x2344 ;_keys+15
; end of _keys
;display.c,0 :: ?ICS_gMatrixGreen
0x06D3	0x000000 ;?ICS_gMatrixGreen+0
0x06D6	0x000000 ;?ICS_gMatrixGreen+3
0x06D9	0x0000 ;?ICS_gMatrixGreen+6
; end of ?ICS_gMatrixGreen
;display.c,15 :: _gMatrixRow
0x06DB	0x010204 ;_gMatrixRow+0
0x06DE	0x081020 ;_gMatrixRow+3
0x06E1	0x4080 ;_gMatrixRow+6
; end of _gMatrixRow
;display.c,0 :: ?ICSDisplay_Refresh_i_L0
0x06E3	0x00 ;?ICSDisplay_Refresh_i_L0+0
; end of ?ICSDisplay_Refresh_i_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E     [243]    _Graphics_SetPixel
0x0121       [2]    _Delay_1us
0x0123      [26]    _Graphics_HorizontalLine
0x013D     [102]    _Keypad_Key_Press
0x01A3      [24]    _Display_Init
0x01BB      [27]    _Timer_Init
0x01D6       [4]    _Keypad_Init
0x01DA       [6]    _Delay_10us
0x01E0      [18]    _ConnectFour_Init
0x01F2     [688]    _ConnectFour_CheckWinner
0x04A2      [49]    _ConnectFour_SwitchPlayer
0x04D3      [19]    _Display_SetOutput
0x04E6       [9]    _Init
0x04EF     [168]    _ConnectFour_InsertDisc
0x0597       [8]    ___CC2D
0x059F      [21]    _Keypad_Key_Click
0x05B4      [91]    _Display_Refresh
0x060F      [66]    _main
0x0651      [55]    _Timer_Tick
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    connectfour_mCurrentPlayerColor
0x0009       [1]    connectfour_mDiscYPosition
0x000A       [1]    connectfour_mDiscXPostition
0x000B       [4]    timer_mMiliseconds
0x000F       [1]    main_key_L0
0x0010       [1]    Keypad_Key_Click_rslt_L0
0x0010       [1]    ConnectFour_CheckWinner_hits_L0
0x0010       [1]    FARG_ConnectFour_InsertDisc_column
0x0011       [1]    ConnectFour_CheckWinner_i_L0
0x0011       [1]    ConnectFour_InsertDisc_i_L0
0x0012       [1]    ConnectFour_CheckWinner_j_L0
0x0012       [1]    ConnectFour_InsertDisc_j_L0
0x0013       [1]    Keypad_Key_Press_rslt_L0
0x0014       [1]    Keypad_Key_Press_kdata_L0
0x0015       [1]    Keypad_Key_Press_loc_L0
0x0016       [1]    Keypad_Key_Press_rowcnt_L0
0x0017       [1]    Keypad_Key_Press_shifter_L0
0x0018       [1]    FARG_Graphics_HorizontalLine_row
0x0019       [1]    FARG_Graphics_HorizontalLine_columnStart
0x001A       [1]    FARG_Graphics_HorizontalLine_columnEnd
0x001B       [1]    FARG_Graphics_HorizontalLine_color
0x001C       [1]    Graphics_HorizontalLine_column_L0
0x001D       [1]    FARG_Graphics_SetPixel_row
0x001E       [1]    FARG_Graphics_SetPixel_column
0x001F       [1]    FARG_Graphics_SetPixel_color
0x0020       [1]    FARG_Display_SetOutput_row
0x0021       [1]    FARG_Display_SetOutput_red
0x0022       [1]    FARG_Display_SetOutput_green
0x0030       [8]    _gMatrixGreen
0x0038       [1]    Display_Refresh_i_L0
0x0039       [8]    connectfour_mWinnersDiscsPosition
0x0041      [42]    connectfour_mGameMatrix
0x006B       [8]    _gMatrixRed
0x0080       [1]    P0
0x0080       [1]    keypadPort
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [0]    TR1_bit
0x0088       [0]    TR0_bit
0x0089       [1]    TMOD
0x008A       [1]    TL0
0x008B       [1]    TL1
0x008C       [1]    TH0
0x008D       [1]    TH1
0x0090       [1]    P1
0x0090       [1]    display_mRowOutputPort
0x00A0       [1]    P2
0x00A0       [1]    display_mRedOutputPort
0x00A8       [1]    IE
0x00B0       [1]    P3
0x00B0       [1]    display_mGreenOutputPort
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0688       [8]    ?ICSconnectfour_mWinnersDiscsPosition
0x0690      [42]    ?ICSconnectfour_mGameMatrix
0x06BA       [8]    ?ICS_gMatrixRed
0x06C2      [17]    _keys
0x06D3       [8]    ?ICS_gMatrixGreen
0x06DB       [8]    _gMatrixRow
0x06E3       [1]    ?ICSDisplay_Refresh_i_L0
//** Label List: ** 
//----------------------------------------------
  L_ConnectFour_SwitchPlayer0
  L_ConnectFour_SwitchPlayer1
  L_ConnectFour_SwitchPlayer2
  L_ConnectFour_InsertDisc3
  L_ConnectFour_InsertDisc4
  L_ConnectFour_InsertDisc5
  L_ConnectFour_InsertDisc6
  L_ConnectFour_InsertDisc7
  L_ConnectFour_InsertDisc8
  L_ConnectFour_InsertDisc9
  L_ConnectFour_InsertDisc10
  L_ConnectFour_InsertDisc11
  L_ConnectFour_CheckWinner12
  L_ConnectFour_CheckWinner13
  L_ConnectFour_CheckWinner14
  L_ConnectFour_CheckWinner15
  L_ConnectFour_CheckWinner16
  L_ConnectFour_CheckWinner17
  L_ConnectFour_CheckWinner18
  L_ConnectFour_CheckWinner19
  L_ConnectFour_CheckWinner20
  L_ConnectFour_CheckWinner21
  L_ConnectFour_CheckWinner22
  L_ConnectFour_CheckWinner23
  L_ConnectFour_CheckWinner24
  L_ConnectFour_CheckWinner25
  L_ConnectFour_CheckWinner26
  L_ConnectFour_CheckWinner27
  L_ConnectFour_CheckWinner28
  L_ConnectFour_CheckWinner29
  L_ConnectFour_CheckWinner30
  L_ConnectFour_CheckWinner31
  L_ConnectFour_CheckWinner32
  L_ConnectFour_CheckWinner33
  L_ConnectFour_CheckWinner34
  L_ConnectFour_CheckWinner35
  L_ConnectFour_CheckWinner36
  L_ConnectFour_CheckWinner37
  L_ConnectFour_CheckWinner38
  L_ConnectFour_CheckWinner39
  L_ConnectFour_CheckWinner40
  L_ConnectFour_CheckWinner41
  L_ConnectFour_CheckWinner42
  L_ConnectFour_CheckWinner43
  L_ConnectFour_CheckWinner44
  L_ConnectFour_CheckWinner45
  L_ConnectFour_CheckWinner46
  L_ConnectFour_CheckWinner47
  L_ConnectFour_CheckWinner48
  L_ConnectFour_CheckWinner49
  L_ConnectFour_CheckWinner50
  L_ConnectFour_CheckWinner51
  L_ConnectFour_CheckWinner52
  L_ConnectFour_CheckWinner53
  L_ConnectFour_CheckWinner54
  L_ConnectFour_CheckWinner55
  L_ConnectFour_CheckWinner56
  L_ConnectFour_CheckWinner57
  L_ConnectFour_CheckWinner58
  L_ConnectFour_CheckWinner59
  L_ConnectFour_CheckWinner60
  L_ConnectFour_CheckWinner61
  L_ConnectFour_TurnWinnersDiscs62
  L_ConnectFour_TurnWinnersDiscs63
  L_ConnectFour_TurnWinnersDiscs64
  L_ConnectFour_TurnWinnersDiscs65
  L_ConnectFour_TurnWinnersDiscs66
  L_ConnectFour_TurnWinnersDiscs67
  L_ConnectFour_TurnWinnersDiscs68
  L_ConnectFour_TurnWinnersDiscs69
  L_ConnectFour_NewGame70
  L_ConnectFour_NewGame71
  L_ConnectFour_NewGame72
  L_ConnectFour_NewGame73
  L_ConnectFour_NewGame74
  L_ConnectFour_NewGame75
  L_ConnectFour_NewGame76
  L_ConnectFour_NewGame77
  L_ConnectFour_NewGame78
  L_ConnectFour_NewGame79
  L_ConnectFour_NewGame80
  L_ConnectFour_NewGame81
  L__ConnectFour_CheckWinner82
  L__ConnectFour_CheckWinner83
  L__ConnectFour_CheckWinner84
  L__ConnectFour_CheckWinner85
  _ConnectFour_Init
  _ConnectFour_SwitchPlayer
  _ConnectFour_InsertDisc
  _ConnectFour_CheckWinner
  L__ConnectFour_CheckWinner86
  L__ConnectFour_CheckWinner87
  L__ConnectFour_CheckWinner88
  L__ConnectFour_CheckWinner89
  L__ConnectFour_CheckWinner90
  L__ConnectFour_CheckWinner91
  L__ConnectFour_CheckWinner92
  L__ConnectFour_CheckWinner93
  L__ConnectFour_CheckWinner94
  L__ConnectFour_CheckWinner95
  L__ConnectFour_CheckWinner96
  L__ConnectFour_CheckWinner97
  L__ConnectFour_CheckWinner98
  L__ConnectFour_CheckWinner99
  L__ConnectFour_CheckWinner100
  L__ConnectFour_CheckWinner101
  L__ConnectFour_CheckWinner102
  L__ConnectFour_CheckWinner103
  L__ConnectFour_CheckWinner104
  L__ConnectFour_CheckWinner105
  L__ConnectFour_CheckWinner106
  L__ConnectFour_CheckWinner107
  L__ConnectFour_CheckWinner108
  L__ConnectFour_CheckWinner109
  L__ConnectFour_CheckWinner110
  L__ConnectFour_CheckWinner111
  L__ConnectFour_CheckWinner112
  L__ConnectFour_CheckWinner113
  _ConnectFour_TurnWinnersDiscs
  L__ConnectFour_TurnWinnersDiscs114
  L__ConnectFour_TurnWinnersDiscs115
  L__ConnectFour_TurnWinnersDiscs116
  L__ConnectFour_TurnWinnersDiscs117
  _ConnectFour_NewGame
  L_Display_Refresh0
  _Display_Init
  _Display_SetOutput
  _Display_Refresh
  L_Graphics_SetPixel0
  L_Graphics_SetPixel1
  L_Graphics_SetPixel2
  L_Graphics_SetPixel3
  L_Graphics_SetPixel4
  L_Graphics_SetPixel5
  L_Graphics_VerticalLine6
  L_Graphics_VerticalLine7
  L_Graphics_VerticalLine8
  L_Graphics_HorizontalLine9
  L_Graphics_HorizontalLine10
  L_Graphics_HorizontalLine11
  L_Graphics_ClearDisplay12
  L_Graphics_ClearDisplay13
  L_Graphics_ClearDisplay14
  _Graphics_SetPixel
  L__Graphics_SetPixel15
  L__Graphics_SetPixel16
  L__Graphics_SetPixel17
  L__Graphics_SetPixel18
  L__Graphics_SetPixel19
  L__Graphics_SetPixel20
  L__Graphics_SetPixel21
  L__Graphics_SetPixel22
  L__Graphics_SetPixel23
  L__Graphics_SetPixel24
  L__Graphics_SetPixel25
  L__Graphics_SetPixel26
  L__Graphics_SetPixel27
  L__Graphics_SetPixel28
  L__Graphics_SetPixel29
  L__Graphics_SetPixel30
  _Graphics_VerticalLine
  _Graphics_HorizontalLine
  _Graphics_ClearDisplay
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L__main12
  _Init
  _main
  _Timer_Init
  _Timer_Miliseconds
  _Timer_Tick
  L_Delay_Cyc0
  L_Delay_Cyc1
  L_VDelay_ms2
  L_VDelay_ms3
  L_VDelay_ms4
  L_VDelay_ms5
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _Delay_Cyc
  _VDelay_ms
  L_Keypad_Key_Press0
  L_Keypad_Key_Press1
  L_Keypad_Key_Press2
  L_Keypad_Key_Press3
  L_Keypad_Key_Press4
  L_Keypad_Key_Click5
  L_Keypad_Key_Click6
  _Keypad_Init
  _Keypad_Key_Press
  L__Keypad_Key_Press7
  L__Keypad_Key_Press8
  L__Keypad_Key_Press9
  L__Keypad_Key_Press10
  _Keypad_Key_Click
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  _Timer_Init
  _Timer_Miliseconds
  _Timer_Tick
  L_Display_Refresh0
  _Display_Init
  _Display_SetOutput
  _Display_Refresh
